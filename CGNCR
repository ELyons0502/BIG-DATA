Big Data and Machine Learning: Group Project
Step one: Download relevant packages
import numpy as np
import pandas as pd
import seaborn as sns
import numpy as np
import pandas as pd
import seaborn as sns
For packages not readily available in Python 3:

pip install dbnomics
pip install dbnomics
Requirement already satisfied: dbnomics in c:\programdata\anaconda3\lib\site-packages (1.2.2)
Requirement already satisfied: requests>=2.18.4 in c:\programdata\anaconda3\lib\site-packages (from dbnomics) (2.25.1)
Requirement already satisfied: pandas>=0.21 in c:\programdata\anaconda3\lib\site-packages (from dbnomics) (1.2.1)
Requirement already satisfied: python-dateutil>=2.7.3 in c:\programdata\anaconda3\lib\site-packages (from pandas>=0.21->dbnomics) (2.8.1)
Requirement already satisfied: numpy>=1.16.5 in c:\programdata\anaconda3\lib\site-packages (from pandas>=0.21->dbnomics) (1.19.2)
Requirement already satisfied: pytz>=2017.3 in c:\programdata\anaconda3\lib\site-packages (from pandas>=0.21->dbnomics) (2020.5)
Requirement already satisfied: urllib3<1.27,>=1.21.1 in c:\programdata\anaconda3\lib\site-packages (from requests>=2.18.4->dbnomics) (1.26.3)
Requirement already satisfied: certifi>=2017.4.17 in c:\programdata\anaconda3\lib\site-packages (from requests>=2.18.4->dbnomics) (2021.10.8)
Requirement already satisfied: chardet<5,>=3.0.2 in c:\programdata\anaconda3\lib\site-packages (from requests>=2.18.4->dbnomics) (4.0.0)
Requirement already satisfied: idna<3,>=2.5 in c:\programdata\anaconda3\lib\site-packages (from requests>=2.18.4->dbnomics) (2.10)
Requirement already satisfied: six>=1.5 in c:\programdata\anaconda3\lib\site-packages (from python-dateutil>=2.7.3->pandas>=0.21->dbnomics) (1.15.0)
Note: you may need to restart the kernel to use updated packages.
from dbnomics import fetch_series, fetch_series_by_api_link
​
Step 2: Download the data
Let's first try and download our target variable: Central Government Net Cash Requirement (CGNCR). This script will use the DBnomics package to download any data from the ONS and BoE that will be used in our group project. Using DBnomics will reduce the time required to upload and adjust data inputs.

cgncr_df = fetch_series('ONS/PUSF/RUUW.Q')
cgncr_df.head(10)
@frequency	provider_code	dataset_code	dataset_name	series_code	series_name	original_period	period	original_value	value	title	freq	Title	Frequency
0	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q1	1946-01-01	-663.0	-663.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
1	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q2	1946-04-01	399.0	399.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
2	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q3	1946-07-01	354.0	354.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
3	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q4	1946-10-01	373.0	373.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
4	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1947-Q1	1947-01-01	-687.0	-687.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
5	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1947-Q2	1947-04-01	195.0	195.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
6	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1947-Q3	1947-07-01	154.0	154.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
7	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1947-Q4	1947-10-01	161.0	161.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
8	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1948-Q1	1948-01-01	-707.0	-707.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
9	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1948-Q2	1948-04-01	20.0	20.0	RUUW	Q	CG: Net cash requirement: £m CPNSA	Quarterly
Here, we have stored the data in the data frame named 'psncr_df' by fetching a series which is defined by the provider (ONS), the dataset ID (PUSF or the public sector finances times series), and the specific ID code of the timeseries (JW38) on a quarterly frequency (Q).

Let's use seaborn package to see how CGNRC has trended over time:

CGNCR
import seaborn as sns
sns.set_theme(style="darkgrid")
from pylab import rcParams
rcParams['figure.figsize'] = 10,4
​
CGNCR = sns.lineplot(data=cgncr_df, x="period", y="value", color='b').set_title('CGNRC over time, £m - Quarterly')
CGNCR
​
Text(0.5, 1.0, 'CGNRC over time, £m - Quarterly')

From looking at that chart above, we can see that we have a non-stationary dataset due to the increasing trend from lower left to upper right, as well as some seasonality across each period t.

To render the data stationary, we will normalise such by placing any variables on a % to GDP basis going forward.

Now, let's try and collect multiple series in one data frame and call it "long data frame":

df_long = fetch_series(['ONS/PUSF/RUUW.Q', # CG: Net cash requirement: £m CPNSA,
                       'ONS/UKEA/BKTL.Q', # Gross Domestic Product at market prices: CP: NSA £m – Quarterly,
                        'ONS/PUSF/HF6W.Q', # PS: Net Debt (excluding public sector banks): £bn: CPNSA – Quarterly,
                        'ONS/PUSF/NMFX.Q', # CG: Current expenditure: Interest payable: £m CPNSA – Quarterly,
                        'ONS/PUSF/MU74.Q', # BoE: Current exp: Interest & dividends paid to private sector and RoW: £m CPNSA – Quarterly,
                        'ONS/LMS/MGSX.Q', # Unemployment rate (aged 16 and over, seasonally adjusted) – Quarterly,
                        'ONS/LMS/MGUK.Q', # LFS: ILO unemployment rate: UK: All: Aged 16 and over: %: NSA – Quarterly,
                        'ONS/MM23/D7G7.Q', # CPI ANNUAL RATE 00: ALL ITEMS 2015=100 – Quarterly,
                        'ONS/UKEA/BKVT.Q', # Gross Domestic Product: CVM: NSA £m – Quarterly,
                        'ONS/UKEA/IHYQ.Q', # Gross Domestic Product: Quarter on Quarter growth: CVM SA % – Quarterly,
                        'ONS/UKEA/YBGB.Q', # Gross domestic product at market prices:Implied deflator:SA – Quarterly,
                        'ONS/CXNV/NPEN.Q', # Gross Fixed Capital Formation: Business Investment: CVM NSA: £m – Quarterly,
                        'ONS/CXNV/NPQR.Q', # Total Gross Fixed Capital Formation CVM NSA £m – Quarterly,
                        'ONS/UKEA/ABJR.Q', # Household final consumption expenditure :National concept CVM SA - £m – Quarterly,
                        'ONS/LMS/LF2S.Q', # LFS: Economic inactivity rate: UK: All: Aged 16-64: %: SA – Quarterly,
                        'ONS/LMS/YBUS.Q', # LFS: Total actual weekly hours worked (millions): UK: All: SA – Quarterly,
                        'ONS/PRDY/LZVD.Q', # UK Whole Economy: Output per hour worked % change per annum SA – Quarterly,
                        'ONS/UKEA/DG5H.Q', # Households (S.14): Households' saving ratio (per cent): Current price: £m: NSA – Quarterly,
                        'ONS/PNBP/HBOP.Q' # BoP Current Account Balance SA £m – Quarterly,
                       ])
​
df_long
@frequency	provider_code	dataset_code	dataset_name	series_code	series_name	original_period	period	original_value	value	...	Title	Frequency	Title	Frequency	Title	Frequency	Title	Frequency	Title	Frequency
0	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q1	1946-01-01	-663.0	-663.0	...	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly
1	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q2	1946-04-01	399.0	399.0	...	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly
2	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q3	1946-07-01	354.0	354.0	...	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly
3	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1946-Q4	1946-10-01	373.0	373.0	...	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly
4	quarterly	ONS	PUSF	Public sector finances time series	RUUW.Q	CG: Net cash requirement: £m CPNSA – Quarterly	1947-Q1	1947-01-01	-687.0	-687.0	...	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly	CG: Net cash requirement: £m CPNSA	Quarterly
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
298	quarterly	ONS	PNBP	Balance of payments time series	HBOP.Q	BoP Current Account Balance SA £m – Quarterly	2020-Q3	2020-07-01	-8254.0	-8254.0	...	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly
299	quarterly	ONS	PNBP	Balance of payments time series	HBOP.Q	BoP Current Account Balance SA £m – Quarterly	2020-Q4	2020-10-01	-26030.0	-26030.0	...	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly
300	quarterly	ONS	PNBP	Balance of payments time series	HBOP.Q	BoP Current Account Balance SA £m – Quarterly	2021-Q1	2021-01-01	-11317.0	-11317.0	...	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly
301	quarterly	ONS	PNBP	Balance of payments time series	HBOP.Q	BoP Current Account Balance SA £m – Quarterly	2021-Q2	2021-04-01	-13462.0	-13462.0	...	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly
302	quarterly	ONS	PNBP	Balance of payments time series	HBOP.Q	BoP Current Account Balance SA £m – Quarterly	2021-Q3	2021-07-01	-24444.0	-24444.0	...	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly	BoP Current Account Balance SA £m	Quarterly
5427 rows × 38 columns

Step three: Reshape the data
Moving from a long format to a wide format.

df_wide = df_long.pivot(index = 'period', columns = 'series_name', values = 'value')
​
df_wide
series_name	BoE: Current exp: Interest & dividends paid to private sector and RoW: £m CPNSA – Quarterly	BoP Current Account Balance SA £m – Quarterly	CG: Current expenditure: Interest payable: £m CPNSA – Quarterly	CG: Net cash requirement: £m CPNSA – Quarterly	CPI ANNUAL RATE 00: ALL ITEMS 2015=100 – Quarterly	Gross Domestic Product at market prices: CP: NSA £m – Quarterly	Gross Domestic Product: CVM: NSA £m – Quarterly	Gross Domestic Product: Quarter on Quarter growth: CVM SA % – Quarterly	Gross Fixed Capital Formation: Business Investment: CVM NSA: £m – Quarterly	Gross domestic product at market prices:Implied deflator:SA – Quarterly	Household final consumption expenditure :National concept CVM SA - £m – Quarterly	Households (S.14): Households' saving ratio (per cent): Current price: £m: NSA – Quarterly	LFS: Economic inactivity rate: UK: All: Aged 16-64: %: SA – Quarterly	LFS: ILO unemployment rate: UK: All: Aged 16 and over: %: NSA – Quarterly	LFS: Total actual weekly hours worked (millions): UK: All: SA – Quarterly	PS: Net Debt (excluding public sector banks): £bn: CPNSA – Quarterly	Total Gross Fixed Capital Formation CVM NSA £m – Quarterly	UK Whole Economy: Output per hour worked % change per annum SA – Quarterly	Unemployment rate (aged 16 and over, seasonally adjusted) – Quarterly
period																			
1946-01-01	0.0	NaN	124.0	-663.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-04-01	0.0	NaN	124.0	399.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-07-01	0.0	NaN	124.0	354.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-10-01	0.0	NaN	124.0	373.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1947-01-01	0.0	NaN	132.0	-687.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2021-04-01	-4184.0	-13462.0	17802.0	73422.0	2.1	571803.0	544298.0	5.4	50864.0	105.0	330844.0	13.9	21.1	4.5	1001.3	2204.7	92265.0	4.9	4.7
2021-07-01	-4096.0	-24444.0	14760.0	24624.0	2.8	584928.0	552277.0	1.1	50358.0	105.5	339794.0	7.7	21.1	4.4	1026.6	2207.7	94745.0	-4.5	4.3
2021-10-01	NaN	NaN	NaN	NaN	4.9	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-01-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-04-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
306 rows × 19 columns

Step four: Rename columns, clean the data, and manipulate results
list(df_wide)
['BoE: Current exp: Interest & dividends paid to private sector and RoW: £m CPNSA – Quarterly',
 'BoP Current Account Balance SA £m – Quarterly',
 'CG: Current expenditure: Interest payable: £m CPNSA – Quarterly',
 'CG: Net cash requirement: £m CPNSA – Quarterly',
 'CPI ANNUAL RATE 00: ALL ITEMS 2015=100 – Quarterly',
 'Gross Domestic Product at market prices: CP: NSA £m – Quarterly',
 'Gross Domestic Product: CVM: NSA £m – Quarterly',
 'Gross Domestic Product: Quarter on Quarter growth: CVM SA % – Quarterly',
 'Gross Fixed Capital Formation: Business Investment: CVM NSA: £m – Quarterly',
 'Gross domestic product at market prices:Implied deflator:SA – Quarterly',
 'Household final consumption expenditure :National concept CVM SA - £m – Quarterly',
 "Households (S.14): Households' saving ratio (per cent): Current price: £m: NSA – Quarterly",
 'LFS: Economic inactivity rate: UK: All: Aged 16-64: %: SA – Quarterly',
 'LFS: ILO unemployment rate: UK: All: Aged 16 and over: %: NSA – Quarterly',
 'LFS: Total actual weekly hours worked (millions): UK: All: SA – Quarterly',
 'PS: Net Debt (excluding public sector banks): £bn: CPNSA – Quarterly',
 'Total Gross Fixed Capital Formation CVM NSA £m – Quarterly',
 'UK Whole Economy: Output per hour worked % change per annum SA – Quarterly',
 'Unemployment rate (aged 16 and over, seasonally adjusted) – Quarterly']
cols = ['boe_interest', 'current_account_bal', 'interest', 'cgncr', 'infl', 'nominal_gdp', 'real_gdp', 'rgdpgr_QoQ', 'nom_bus_inv', 'growth_defl', 'household_consumption', 'savings_ratio', 'inactivity', 'unemployment', 'twhw', 'psnd', 'nom_total_gfcf', 'prodgrowth_QoQ', 'unemployment_SA']
df_wide.set_axis(cols, axis = 1, inplace = True)
df_wide
boe_interest	current_account_bal	interest	cgncr	infl	nominal_gdp	real_gdp	rgdpgr_QoQ	nom_bus_inv	growth_defl	household_consumption	savings_ratio	inactivity	unemployment	twhw	psnd	nom_total_gfcf	prodgrowth_QoQ	unemployment_SA
period																			
1946-01-01	0.0	NaN	124.0	-663.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-04-01	0.0	NaN	124.0	399.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-07-01	0.0	NaN	124.0	354.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-10-01	0.0	NaN	124.0	373.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1947-01-01	0.0	NaN	132.0	-687.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2021-04-01	-4184.0	-13462.0	17802.0	73422.0	2.1	571803.0	544298.0	5.4	50864.0	105.0	330844.0	13.9	21.1	4.5	1001.3	2204.7	92265.0	4.9	4.7
2021-07-01	-4096.0	-24444.0	14760.0	24624.0	2.8	584928.0	552277.0	1.1	50358.0	105.5	339794.0	7.7	21.1	4.4	1026.6	2207.7	94745.0	-4.5	4.3
2021-10-01	NaN	NaN	NaN	NaN	4.9	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-01-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-04-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
306 rows × 19 columns

df_wide.fillna(0)
boe_interest	current_account_bal	interest	cgncr	infl	nominal_gdp	real_gdp	rgdpgr_QoQ	nom_bus_inv	growth_defl	household_consumption	savings_ratio	inactivity	unemployment	twhw	psnd	nom_total_gfcf	prodgrowth_QoQ	unemployment_SA
period																			
1946-01-01	0.0	0.0	124.0	-663.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
1946-04-01	0.0	0.0	124.0	399.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
1946-07-01	0.0	0.0	124.0	354.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
1946-10-01	0.0	0.0	124.0	373.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
1947-01-01	0.0	0.0	132.0	-687.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2021-04-01	-4184.0	-13462.0	17802.0	73422.0	2.1	571803.0	544298.0	5.4	50864.0	105.0	330844.0	13.9	21.1	4.5	1001.3	2204.7	92265.0	4.9	4.7
2021-07-01	-4096.0	-24444.0	14760.0	24624.0	2.8	584928.0	552277.0	1.1	50358.0	105.5	339794.0	7.7	21.1	4.4	1026.6	2207.7	94745.0	-4.5	4.3
2021-10-01	0.0	0.0	0.0	0.0	4.9	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
2022-01-01	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
2022-04-01	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0
306 rows × 19 columns

Now, manipulate the data to produce outputs that are necessary for model specification:

df_wide['eir'] = ((df_wide['interest'] + df_wide['boe_interest'])/(df_wide['psnd'].shift(1)*1000))*100 # Effective interest rate is equal to net interest over the lag of debt (in millions) multiplied by 100
df_wide['cb'] = (df_wide['current_account_bal'] / df_wide['nominal_gdp'])*100 # take current account balance as a share of GDP
df_wide['cgncr'] = (df_wide['cgncr'] / df_wide['nominal_gdp'])*100 # take CGNCR as a share of GDP
df_wide['inv'] = (df_wide['nom_bus_inv'] / df_wide['nominal_gdp'])*100 # take business investment as a share of GDP
df_wide['household_consumption'] = (df_wide['household_consumption'] / df_wide['nominal_gdp'])*100 # take household consumption as a share of GDP
df_wide['twhwgr'] = ((df_wide['twhw']/df_wide['twhw'].shift(1))-1)*100 # take % growth in hours worked quarter on quarter
df_wide['total_gfcf'] = (df_wide['nom_total_gfcf'] / df_wide['nominal_gdp'])*100 # take total GFCF as a share of GDP
df_wide
boe_interest	current_account_bal	interest	cgncr	infl	nominal_gdp	real_gdp	rgdpgr_QoQ	nom_bus_inv	growth_defl	...	twhw	psnd	nom_total_gfcf	prodgrowth_QoQ	unemployment_SA	eir	cb	inv	twhwgr	total_gfcf
period																					
1946-01-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-04-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-07-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-10-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1947-01-01	0.0	NaN	132.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2021-04-01	-4184.0	-13462.0	17802.0	12.840436	2.1	571803.0	544298.0	5.4	50864.0	105.0	...	1001.3	2204.7	92265.0	4.9	4.7	0.638025	-2.354307	8.895371	5.355640	16.135802
2021-07-01	-4096.0	-24444.0	14760.0	4.209749	2.8	584928.0	552277.0	1.1	50358.0	105.5	...	1026.6	2207.7	94745.0	-4.5	4.3	0.483694	-4.178976	8.609265	2.526715	16.197720
2021-10-01	NaN	NaN	NaN	NaN	4.9	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-01-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-04-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
306 rows × 24 columns

df_wide.rename(columns={'boe_interest':'BoE_interest', 'prodgrowth_QoQ':'productivity'}, inplace=True)
​
df_wide
BoE_interest	current_account_bal	interest	cgncr	infl	nominal_gdp	real_gdp	rgdpgr_QoQ	nom_bus_inv	growth_defl	...	twhw	psnd	nom_total_gfcf	productivity	unemployment_SA	eir	cb	inv	twhwgr	total_gfcf
period																					
1946-01-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-04-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-07-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1946-10-01	0.0	NaN	124.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
1947-01-01	0.0	NaN	132.0	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2021-04-01	-4184.0	-13462.0	17802.0	12.840436	2.1	571803.0	544298.0	5.4	50864.0	105.0	...	1001.3	2204.7	92265.0	4.9	4.7	0.638025	-2.354307	8.895371	5.355640	16.135802
2021-07-01	-4096.0	-24444.0	14760.0	4.209749	2.8	584928.0	552277.0	1.1	50358.0	105.5	...	1026.6	2207.7	94745.0	-4.5	4.3	0.483694	-4.178976	8.609265	2.526715	16.197720
2021-10-01	NaN	NaN	NaN	NaN	4.9	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-01-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-04-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	...	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
306 rows × 24 columns

Creating a baseline model
Step one: Slice data frame to only include predictors outlined in model specification
df = df_wide[['cgncr', # Central Gov Net Cash Requirement
              'cb', # Current Account Balance as a % of GDP
              'infl', 
              'rgdpgr_QoQ', # Real GDP growth, QoQ
              'household_consumption', 
              'savings_ratio', 
              'inactivity',
              'unemployment', 
              'twhwgr', # Total Hours Worked / Week Growth, QoQ
              'productivity', # Productivity Growth, QoQ
              'BoE_interest', 
              'eir', # Effective Interest Rate
              'inv',
              'total_gfcf' # Total Gross Fixed Capital Formation as % of GDP
             ]]
​
df
cgncr	cb	infl	rgdpgr_QoQ	household_consumption	savings_ratio	inactivity	unemployment	twhwgr	productivity	BoE_interest	eir	inv	total_gfcf
period														
1946-01-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	0.0	NaN	NaN	NaN
1946-04-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	0.0	NaN	NaN	NaN
1946-07-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	0.0	NaN	NaN	NaN
1946-10-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	0.0	NaN	NaN	NaN
1947-01-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	0.0	NaN	NaN	NaN
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2021-04-01	12.840436	-2.354307	2.1	5.4	57.859787	13.9	21.1	4.5	5.355640	4.9	-4184.0	0.638025	8.895371	16.135802
2021-07-01	4.209749	-4.178976	2.8	1.1	58.091594	7.7	21.1	4.4	2.526715	-4.5	-4096.0	0.483694	8.609265	16.197720
2021-10-01	NaN	NaN	4.9	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-01-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
2022-04-01	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN	NaN
306 rows × 14 columns

Check for missing data

df.isna().sum()
cgncr                     39
cb                        39
infl                     174
rgdpgr_QoQ                40
household_consumption     39
savings_ratio             71
inactivity               103
unemployment             188
twhwgr                   104
productivity             107
BoE_interest               3
eir                      174
inv                      207
total_gfcf                39
dtype: int64
Now, let's clean the data and drop any missing rows

df1 = df.dropna(axis=0, how='any', thresh=None, inplace=False)
df1
cgncr	cb	infl	rgdpgr_QoQ	household_consumption	savings_ratio	inactivity	unemployment	twhwgr	productivity	BoE_interest	eir	inv	total_gfcf
period														
1997-01-01	2.806258	0.279814	1.9	1.8	89.622529	9.6	23.6	7.4	0.877497	1.0	0.0	2.014332	15.101417	26.725449
1997-04-01	3.823072	-0.436642	1.6	0.8	90.638018	12.7	23.4	7.1	0.526497	1.1	0.0	2.080403	15.416923	25.225364
1997-07-01	0.694312	-0.042568	1.9	0.7	89.150955	7.3	23.6	7.1	0.216327	0.8	0.0	2.001686	15.656332	25.982576
1997-10-01	-0.466053	-0.797533	1.8	1.2	89.852506	8.1	23.8	6.4	-0.045444	1.9	0.0	2.152766	16.894327	27.770416
1998-01-01	-2.442600	-1.497500	1.6	0.7	89.719787	6.0	23.8	6.4	0.488747	2.2	0.0	2.068674	16.862334	28.478299
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2020-07-01	13.367780	-1.534129	0.6	17.6	60.004461	12.7	21.0	5.1	8.588667	5.7	-3931.0	0.341278	9.087124	16.903118
2020-10-01	12.743945	-4.631994	0.5	1.5	56.504277	12.5	21.1	5.2	5.588844	1.4	-4052.0	0.224913	9.535715	17.408148
2021-01-01	3.703245	-2.030013	0.6	-1.3	54.854310	15.8	21.4	4.8	-1.939744	3.0	-4128.0	0.222175	8.412439	17.347942
2021-04-01	12.840436	-2.354307	2.1	5.4	57.859787	13.9	21.1	4.5	5.355640	4.9	-4184.0	0.638025	8.895371	16.135802
2021-07-01	4.209749	-4.178976	2.8	1.1	58.091594	7.7	21.1	4.4	2.526715	-4.5	-4096.0	0.483694	8.609265	16.197720
99 rows × 14 columns

Step two: Expanding data frames
Current data excl. key variables, notably output gap. So, let's address here:

import pandas as pd
xls  = pd.read_excel('C:/Users/ELyons/Group Project/Output gap.xlsx', sheet_name= 'UK Output Gap')
xls
Period	output gap
0	1997-01-01	1.4
1	1997-04-01	1.8
2	1997-07-01	2.1
3	1997-10-01	2.3
4	1998-01-01	2.5
...	...	...
94	2020-07-01	-0.8
95	2020-10-01	-0.8
96	2021-01-01	0.4
97	2021-04-01	NaN
98	2021-07-01	NaN
99 rows × 2 columns

xls = xls.set_index('Period')
Now, let's merge 'xls' with 'df' to produce 'df_final'

df_final = df1.join(xls)
df_final
cgncr	cb	infl	rgdpgr_QoQ	household_consumption	savings_ratio	inactivity	unemployment	twhwgr	productivity	BoE_interest	eir	inv	total_gfcf	output gap
period															
1997-01-01	2.806258	0.279814	1.9	1.8	89.622529	9.6	23.6	7.4	0.877497	1.0	0.0	2.014332	15.101417	26.725449	1.4
1997-04-01	3.823072	-0.436642	1.6	0.8	90.638018	12.7	23.4	7.1	0.526497	1.1	0.0	2.080403	15.416923	25.225364	1.8
1997-07-01	0.694312	-0.042568	1.9	0.7	89.150955	7.3	23.6	7.1	0.216327	0.8	0.0	2.001686	15.656332	25.982576	2.1
1997-10-01	-0.466053	-0.797533	1.8	1.2	89.852506	8.1	23.8	6.4	-0.045444	1.9	0.0	2.152766	16.894327	27.770416	2.3
1998-01-01	-2.442600	-1.497500	1.6	0.7	89.719787	6.0	23.8	6.4	0.488747	2.2	0.0	2.068674	16.862334	28.478299	2.5
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2020-07-01	13.367780	-1.534129	0.6	17.6	60.004461	12.7	21.0	5.1	8.588667	5.7	-3931.0	0.341278	9.087124	16.903118	-0.8
2020-10-01	12.743945	-4.631994	0.5	1.5	56.504277	12.5	21.1	5.2	5.588844	1.4	-4052.0	0.224913	9.535715	17.408148	-0.8
2021-01-01	3.703245	-2.030013	0.6	-1.3	54.854310	15.8	21.4	4.8	-1.939744	3.0	-4128.0	0.222175	8.412439	17.347942	0.4
2021-04-01	12.840436	-2.354307	2.1	5.4	57.859787	13.9	21.1	4.5	5.355640	4.9	-4184.0	0.638025	8.895371	16.135802	NaN
2021-07-01	4.209749	-4.178976	2.8	1.1	58.091594	7.7	21.1	4.4	2.526715	-4.5	-4096.0	0.483694	8.609265	16.197720	NaN
99 rows × 15 columns

df_final.rename(columns={'output gap':'o_gap'}, inplace=True)
df_final = df_final.dropna(axis=0, how='any', thresh=None, inplace=False)
df_final
cgncr	cb	infl	rgdpgr_QoQ	household_consumption	savings_ratio	inactivity	unemployment	twhwgr	productivity	BoE_interest	eir	inv	total_gfcf	o_gap
period															
1997-01-01	2.806258	0.279814	1.9	1.8	89.622529	9.6	23.6	7.4	0.877497	1.0	0.0	2.014332	15.101417	26.725449	1.4
1997-04-01	3.823072	-0.436642	1.6	0.8	90.638018	12.7	23.4	7.1	0.526497	1.1	0.0	2.080403	15.416923	25.225364	1.8
1997-07-01	0.694312	-0.042568	1.9	0.7	89.150955	7.3	23.6	7.1	0.216327	0.8	0.0	2.001686	15.656332	25.982576	2.1
1997-10-01	-0.466053	-0.797533	1.8	1.2	89.852506	8.1	23.8	6.4	-0.045444	1.9	0.0	2.152766	16.894327	27.770416	2.3
1998-01-01	-2.442600	-1.497500	1.6	0.7	89.719787	6.0	23.8	6.4	0.488747	2.2	0.0	2.068674	16.862334	28.478299	2.5
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2020-01-01	-0.379591	-2.596812	1.7	-2.6	59.571267	5.0	20.4	4.0	-1.742691	-0.1	-2870.0	0.360707	9.504062	17.455188	0.0
2020-04-01	35.780901	-1.594494	0.6	-19.4	55.588450	26.6	20.9	4.0	-18.075208	-2.1	-3617.0	0.423791	9.028604	15.274615	0.0
2020-07-01	13.367780	-1.534129	0.6	17.6	60.004461	12.7	21.0	5.1	8.588667	5.7	-3931.0	0.341278	9.087124	16.903118	-0.8
2020-10-01	12.743945	-4.631994	0.5	1.5	56.504277	12.5	21.1	5.2	5.588844	1.4	-4052.0	0.224913	9.535715	17.408148	-0.8
2021-01-01	3.703245	-2.030013	0.6	-1.3	54.854310	15.8	21.4	4.8	-1.939744	3.0	-4128.0	0.222175	8.412439	17.347942	0.4
97 rows × 15 columns

Step three: Specifying the model
Target Variable = cgnrc

Predictors = All remaining variables in df_final

The target variable:
Let's first take a look at how CGNRC as a % of GDP has trended over time.

from statsmodels.tsa.seasonal import seasonal_decompose
​
from pylab import rcParams
rcParams['figure.figsize'] = 12,8
​
decomposed = seasonal_decompose(df_final['cgncr'], model='additive')
fig = decomposed.plot()
​

As we have normalised the data by using GDP as a denominator, the trend is relatively stationary - excl. exogenous economic shocks such as the 2008 financial crisis and COVID-19. However, seasonality is still highly prevalent. [DOES ANYONE WANT TO ADD MORE ON THIS?]

Moving onto the predictors:
Let's first consider the relationship between predictors and target without making any adjustments:

list(df_final)
['cgncr',
 'cb',
 'infl',
 'rgdpgr_QoQ',
 'household_consumption',
 'savings_ratio',
 'inactivity',
 'unemployment',
 'twhwgr',
 'productivity',
 'BoE_interest',
 'eir',
 'inv',
 'total_gfcf',
 'o_gap']
X = df_final[['cb',
 'infl',
 'rgdpgr_QoQ',
 'household_consumption',
 'savings_ratio',
 'inactivity',
 'unemployment',
 'twhwgr',
 'productivity',
 'BoE_interest',
 'eir',
 'inv',
 'total_gfcf',
 'o_gap']]

X = sm.add_constant(X)

y = df_final['cgncr']


X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.33, random_state=42)
print(X_train)
from sklearn.model_selection import train_test_split 
import statsmodels.api as sm
​
X = df_final[['cb',
 'infl',
 'rgdpgr_QoQ',
 'household_consumption',
 'savings_ratio',
 'inactivity',
 'unemployment',
 'twhwgr',
 'productivity',
 'BoE_interest',
 'eir',
 'inv',
 'total_gfcf',
 'o_gap']]
​
X = sm.add_constant(X)
​
y = df_final['cgncr']
​
​
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.33, random_state=42)
print(X_train)
            const        cb  infl  rgdpgr_QoQ  household_consumption  \
period                                                                 
2018-10-01    1.0 -4.048118   2.3         0.3              62.127099   
1998-04-01    1.0 -1.400668   1.8         0.7              90.395423   
2008-04-01    1.0 -4.192538   3.4        -0.5              74.258859   
2014-04-01    1.0 -4.118072   1.7         0.8              66.019290   
2005-10-01    1.0 -2.399487   2.1         1.1              78.235766   
...           ...       ...   ...         ...                    ...   
2012-01-01    1.0 -2.477263   3.5         0.7              67.188951   
2014-10-01    1.0 -6.638223   0.9         0.6              65.360880   
2000-07-01    1.0 -2.352643   0.8         0.4              88.293177   
2020-01-01    1.0 -2.596812   1.7        -2.6              59.571267   
2009-10-01    1.0 -2.775916   2.1         0.3              73.135306   

            savings_ratio  inactivity  unemployment    twhwgr  productivity  \
period                                                                        
2018-10-01            4.4        20.9           3.9 -0.067133           0.5   
1998-04-01           10.1        23.9           6.2  0.000000           2.5   
2008-04-01            9.7        22.9           5.3 -1.099361           0.8   
2014-04-01           11.2        22.2           6.2  0.970477          -0.2   
2005-10-01            5.1        23.3           5.0 -0.021517           3.2   
...                   ...         ...           ...       ...           ...   
2012-01-01            8.6        23.1           8.2  0.961123           1.3   
2014-10-01            5.5        22.3           5.6  0.594998          -0.2   
2000-07-01            5.0        23.2           5.5  0.078186           3.4   
2020-01-01            5.0        20.4           4.0 -1.742691          -0.1   
2009-10-01           10.1        23.4           7.6  0.043706           0.6   

            BoE_interest       eir        inv  total_gfcf  o_gap  
period                                                            
2018-10-01       -2593.0  0.650271  10.851837   18.708843    0.2  
1998-04-01           0.0  2.163189  16.177160   26.033996    2.5  
2008-04-01           0.0  1.644040  12.094683   20.818415    0.7  
2014-04-01       -3140.0  0.750468  10.437469   17.566928   -0.9  
2005-10-01           0.0  1.613226  12.623689   23.186707    0.3  
...                  ...       ...        ...         ...    ...  
2012-01-01       -2630.0  0.610766  10.406507   19.416090   -1.4  
2014-10-01       -3081.0  0.652996  11.053775   18.950378   -0.3  
2000-07-01           0.0  1.919951  14.787167   24.624672    1.0  
2020-01-01       -2870.0  0.360707   9.504062   17.455188    0.0  
2009-10-01       -1762.0  0.944024  10.021336   18.811225   -3.6  

[64 rows x 15 columns]
model = sm.OLS(y_train, X_train)
results = model.fit()
​
print(results.summary())
                            OLS Regression Results                            
==============================================================================
Dep. Variable:                  cgncr   R-squared:                       0.748
Model:                            OLS   Adj. R-squared:                  0.676
Method:                 Least Squares   F-statistic:                     10.40
Date:                Mon, 24 Jan 2022   Prob (F-statistic):           2.67e-10
Time:                        20:22:05   Log-Likelihood:                -142.69
No. Observations:                  64   AIC:                             315.4
Df Residuals:                      49   BIC:                             347.8
Df Model:                          14                                         
Covariance Type:            nonrobust                                         
=========================================================================================
                            coef    std err          t      P>|t|      [0.025      0.975]
-----------------------------------------------------------------------------------------
const                   -23.6567     26.343     -0.898      0.374     -76.595      29.281
cb                        0.2988      0.314      0.951      0.346      -0.332       0.930
infl                     -0.4642      0.566     -0.820      0.416      -1.602       0.673
rgdpgr_QoQ                0.6458      0.469      1.376      0.175      -0.297       1.589
household_consumption    -0.4169      0.175     -2.377      0.021      -0.769      -0.065
savings_ratio             0.0955      0.160      0.597      0.553      -0.226       0.417
inactivity                3.8984      1.490      2.616      0.012       0.903       6.894
unemployment             -1.0695      0.697     -1.535      0.131      -2.470       0.331
twhwgr                    0.0005      0.781      0.001      1.000      -1.568       1.569
productivity             -0.5398      0.382     -1.413      0.164      -1.308       0.228
BoE_interest              0.0009      0.001      1.100      0.277      -0.001       0.003
eir                       6.0170      2.999      2.006      0.050      -0.010      12.044
inv                       1.4862      0.900      1.651      0.105      -0.323       3.296
total_gfcf               -2.1751      0.609     -3.572      0.001      -3.399      -0.951
o_gap                    -1.7016      0.477     -3.571      0.001      -2.659      -0.744
==============================================================================
Omnibus:                        4.423   Durbin-Watson:                   1.778
Prob(Omnibus):                  0.110   Jarque-Bera (JB):                5.383
Skew:                           0.004   Prob(JB):                       0.0678
Kurtosis:                       4.421   Cond. No.                     1.66e+05
==============================================================================

Notes:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
[2] The condition number is large, 1.66e+05. This might indicate that there are
strong multicollinearity or other numerical problems.
Interpreting these results: Preliminary
The R squared shows us what proportion/fraction of variance in y is shared with variance in x. In this case, this model explains 74.8% of the variation in data.

Our std error is an estimate of the standard deviation of the coefficient, a measurement of the amount of variation in the coefficient throughout its data points. This is relatively small across the period.

Infl, household_consumption, unemployment, productivity, total_gfcf and o_gap negatively impact on cgncr. [This seems bizarre. I think COVID may be skewing results]

Only total_gcfc and o_gap are significant at the 99% level; and eir, inactivity and household_consumption are significant at the 95% level.

The condition number is large, whuch might indicate strong multicollinearity and reduce the scope to test the relative importance of each independent predictor.

Dealing with lags:
Due to the likely interdepency of each x in t with x in t-i, we must specify a model that accounts for these temporal lags before any regression analysis can be undertaken.

We have applied four lags to each predictor in this model.

list(df_final)
['cgncr',
 'cb',
 'infl',
 'rgdpgr_QoQ',
 'household_consumption',
 'savings_ratio',
 'inactivity',
 'unemployment',
 'twhwgr',
 'productivity',
 'BoE_interest',
 'eir',
 'inv',
 'total_gfcf',
 'o_gap']
df_final = 
df_final = df_final.drop('cb_lag1', axis=1)

Creating Lagged Predictors

X = pd.DataFrame(df_final['cgncr'])

X['cgncr_lag1'] = df_final['cgncr'].shift(1)
X['cgncr_lag2'] = df_final['cgncr'].shift(2)
X['cgncr_lag3'] = df_final['cgncr'].shift(3)
X['cgncr_lag4'] = df_final['cgncr'].shift(4)

X1 = pd.DataFrame(df_final['cb'])

X1['cb_lag1'] = df_final['cb'].shift(1)
X1['cb_lag2'] = df_final['cb'].shift(2)
X1['cb_lag3'] = df_final['cb'].shift(3)
X1['cb_lag4'] = df_final['cb'].shift(4)

X2 = pd.DataFrame(df_final['infl'])
X2['infl_lag1'] = df_final['infl'].shift(1)
X2['infl_lag2'] = df_final['infl'].shift(2)
X2['infl_lag3'] = df_final['infl'].shift(3)
X2['infl_lag4'] = df_final['infl'].shift(4)

X3 = pd.DataFrame(df_final['household_consumption'])
X3['household_consumption_lag1'] = df_final['household_consumption'].shift(1)
X3['household_consumption_lag2'] = df_final['household_consumption'].shift(2)
X3['household_consumption_lag3'] = df_final['household_consumption'].shift(3)
X3['household_consumption_lag4'] = df_final['household_consumption'].shift(4)

X4 = pd.DataFrame(df_final['savings_ratio'])
X4['savings_ratio_lag1'] = df_final['savings_ratio'].shift(1)
X4['savings_ratio_lag2'] = df_final['savings_ratio'].shift(2)
X4['savings_ratio_lag3'] = df_final['savings_ratio'].shift(3)
X4['savings_ratio_lag4'] = df_final['savings_ratio'].shift(4)

X5 = pd.DataFrame(df_final['inactivity'])
X5['inactivity_lag1'] = df_final['inactivity'].shift(1)
X5['inactivity_lag2'] = df_final['inactivity'].shift(2)
X5['inactivity_lag3'] = df_final['inactivity'].shift(3)
X5['inactivity_lag4'] = df_final['inactivity'].shift(4)

X6 = pd.DataFrame(df_final['unemployment'])
X6['unemployment_lag1'] = df_final['unemployment'].shift(1)
X6['unemployment_lag2'] = df_final['unemployment'].shift(2)
X6['unemployment_lag3'] = df_final['unemployment'].shift(3)
X6['unemployment_lag4'] = df_final['unemployment'].shift(4)

X7 = pd.DataFrame(df_final['twhwgr'])
X7['twhwgr_lag1'] = df_final['twhwgr'].shift(1)
X7['twhwgr_lag2'] = df_final['twhwgr'].shift(2)
X7['twhwgr_lag3'] = df_final['twhwgr'].shift(3)
X7['twhwgr_lag4'] = df_final['twhwgr'].shift(4)

X8 = pd.DataFrame(df_final['productivity'])
X8['productivity_lag1'] = df_final['productivity'].shift(1)
X8['productivity_lag2'] = df_final['productivity'].shift(2)
X8['productivity_lag3'] = df_final['productivity'].shift(3)
X8['productivity_lag4'] = df_final['productivity'].shift(4)

X9 = pd.DataFrame(df_final['BoE_interest'])
X9['BoE_interest_lag1'] = df_final['BoE_interest'].shift(1)
X9['BoE_interest_lag2'] = df_final['BoE_interest'].shift(2)
X9['BoE_interest_lag3'] = df_final['BoE_interest'].shift(3)
X9['BoE_interest_lag4'] = df_final['BoE_interest'].shift(4)

X10 = pd.DataFrame(df_final['eir'])
X10['eir_lag1'] = df_final['eir'].shift(1)
X10['eir_lag2'] = df_final['eir'].shift(2)
X10['eir_lag3'] = df_final['eir'].shift(3)
X10['eir_lag4'] = df_final['eir'].shift(4)

X11 = pd.DataFrame(df_final['inv'])
X11['inv_lag1'] = df_final['inv'].shift(1)
X11['inv_lag2'] = df_final['inv'].shift(2)
X11['inv_lag3'] = df_final['inv'].shift(3)
X11['inv_lag4'] = df_final['inv'].shift(4)


X12 = pd.DataFrame(df_final['total_gfcf'])
X12['total_gfcf_lag1'] = df_final['total_gfcf'].shift(1)
X12['total_gfcf_lag2'] = df_final['total_gfcf'].shift(2)
X12['total_gfcf_lag3'] = df_final['total_gfcf'].shift(3)
X12['total_gfcf_lag4'] = df_final['total_gfcf'].shift(4)


X13 = pd.DataFrame(df_final['o_gap'])
X13['o_gap_lag1'] = df_final['o_gap'].shift(1)
X13['o_gap_lag2'] = df_final['o_gap'].shift(2)
X13['o_gap_lag3'] = df_final['o_gap'].shift(3)
X13['o_gap_lag4'] = df_final['o_gap'].shift(4)


X14 = pd.DataFrame(df_final['rgdpgr_QoQ'])
X14['rgdpgr_QoQ_lag1'] = df_final['rgdpgr_QoQ'].shift(1)
X14['rgdpgr_QoQ_lag2'] = df_final['rgdpgr_QoQ'].shift(2)
X14['rgdpgr_QoQ_lag3'] = df_final['rgdpgr_QoQ'].shift(3)
X14['rgdpgr_QoQ_lag4'] = df_final['rgdpgr_QoQ'].shift(4)

# For example:
X10

eir	eir_lag1	eir_lag2	eir_lag3	eir_lag4
period					
1997-01-01	2.014332	NaN	NaN	NaN	NaN
1997-04-01	2.080403	2.014332	NaN	NaN	NaN
1997-07-01	2.001686	2.080403	2.014332	NaN	NaN
1997-10-01	2.152766	2.001686	2.080403	2.014332	NaN
1998-01-01	2.068674	2.152766	2.001686	2.080403	2.014332
...	...	...	...	...	...
2020-01-01	0.360707	0.482594	0.444257	0.805141	0.297524
2020-04-01	0.423791	0.360707	0.482594	0.444257	0.805141
2020-07-01	0.341278	0.423791	0.360707	0.482594	0.444257
2020-10-01	0.224913	0.341278	0.423791	0.360707	0.482594
2021-01-01	0.222175	0.224913	0.341278	0.423791	0.360707
Now, let's remove NaN's caused by introducing lags:


X7 = X7[4:]
X = X[4:]
X1 = X1[4:]
X2 = X2[4:]
X3 = X3[4:]
X4 = X4[4:]
X5 = X5[4:]
X6 = X6[4:]
X7 = X7[4:]
X8 = X8[4:]
X9 = X9[4:]
X10 = X10[4:]
X11 = X11[4:]
X12 = X12[4:]
X13 = X13[4:]
X14 = X14[4:]
​
X, X1,X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14
​
(                cgncr  cgncr_lag1  cgncr_lag2  cgncr_lag3  cgncr_lag4
 period                                                               
 1998-01-01  -2.442600   -0.466053    0.694312    3.823072    2.806258
 1998-04-01   2.654218   -2.442600   -0.466053    0.694312    3.823072
 1998-07-01  -0.582444    2.654218   -2.442600   -0.466053    0.694312
 1998-10-01  -1.526534   -0.582444    2.654218   -2.442600   -0.466053
 1999-01-01  -2.191795   -1.526534   -0.582444    2.654218   -2.442600
 ...               ...         ...         ...         ...         ...
 2020-01-01  -0.379591    4.334060    1.818269    4.147895   -1.015848
 2020-04-01  35.780901   -0.379591    4.334060    1.818269    4.147895
 2020-07-01  13.367780   35.780901   -0.379591    4.334060    1.818269
 2020-10-01  12.743945   13.367780   35.780901   -0.379591    4.334060
 2021-01-01   3.703245   12.743945   13.367780   35.780901   -0.379591
 
 [93 rows x 5 columns],
                   cb   cb_lag1   cb_lag2   cb_lag3   cb_lag4
 period                                                      
 1998-01-01 -1.497500 -0.797533 -0.042568 -0.436642  0.279814
 1998-04-01 -1.400668 -1.497500 -0.797533 -0.042568 -0.436642
 1998-07-01  0.488231 -1.400668 -1.497500 -0.797533 -0.042568
 1998-10-01 -0.288500  0.488231 -1.400668 -1.497500 -0.797533
 1999-01-01 -3.277425 -0.288500  0.488231 -1.400668 -1.497500
 ...              ...       ...       ...       ...       ...
 2020-01-01 -2.596812  0.488440 -2.541884 -2.908939 -5.800442
 2020-04-01 -1.594494 -2.596812  0.488440 -2.541884 -2.908939
 2020-07-01 -1.534129 -1.594494 -2.596812  0.488440 -2.541884
 2020-10-01 -4.631994 -1.534129 -1.594494 -2.596812  0.488440
 2021-01-01 -2.030013 -4.631994 -1.534129 -1.594494 -2.596812
 
 [93 rows x 5 columns],
             infl  infl_lag1  infl_lag2  infl_lag3  infl_lag4
 period                                                      
 1998-01-01   1.6        1.8        1.9        1.6        1.9
 1998-04-01   1.8        1.6        1.8        1.9        1.6
 1998-07-01   1.4        1.8        1.6        1.8        1.9
 1998-10-01   1.4        1.4        1.8        1.6        1.8
 1999-01-01   1.6        1.4        1.4        1.8        1.6
 ...          ...        ...        ...        ...        ...
 2020-01-01   1.7        1.4        1.8        2.0        1.9
 2020-04-01   0.6        1.7        1.4        1.8        2.0
 2020-07-01   0.6        0.6        1.7        1.4        1.8
 2020-10-01   0.5        0.6        0.6        1.7        1.4
 2021-01-01   0.6        0.5        0.6        0.6        1.7
 
 [93 rows x 5 columns],
             household_consumption  household_consumption_lag1  \
 period                                                          
 1998-01-01              89.719787                   89.852506   
 1998-04-01              90.395423                   89.719787   
 1998-07-01              90.066907                   90.395423   
 1998-10-01              87.132114                   90.066907   
 1999-01-01              88.226998                   87.132114   
 ...                           ...                         ...   
 2020-01-01              59.571267                   60.188232   
 2020-04-01              55.588450                   59.571267   
 2020-07-01              60.004461                   55.588450   
 2020-10-01              56.504277                   60.004461   
 2021-01-01              54.854310                   56.504277   
 
             household_consumption_lag2  household_consumption_lag3  \
 period                                                               
 1998-01-01                   89.150955                   90.638018   
 1998-04-01                   89.852506                   89.150955   
 1998-07-01                   89.719787                   89.852506   
 1998-10-01                   90.395423                   89.719787   
 1999-01-01                   90.066907                   90.395423   
 ...                                ...                         ...   
 2020-01-01                   62.027613                   63.223739   
 2020-04-01                   60.188232                   62.027613   
 2020-07-01                   59.571267                   60.188232   
 2020-10-01                   55.588450                   59.571267   
 2021-01-01                   60.004461                   55.588450   
 
             household_consumption_lag4  
 period                                  
 1998-01-01                   89.622529  
 1998-04-01                   90.638018  
 1998-07-01                   89.150955  
 1998-10-01                   89.852506  
 1999-01-01                   89.719787  
 ...                                ...  
 2020-01-01                   61.945174  
 2020-04-01                   63.223739  
 2020-07-01                   62.027613  
 2020-10-01                   60.188232  
 2021-01-01                   59.571267  
 
 [93 rows x 5 columns],
             savings_ratio  savings_ratio_lag1  savings_ratio_lag2  \
 period                                                              
 1998-01-01            6.0                 8.1                 7.3   
 1998-04-01           10.1                 6.0                 8.1   
 1998-07-01            4.2                10.1                 6.0   
 1998-10-01            5.2                 4.2                10.1   
 1999-01-01            0.0                 5.2                 4.2   
 ...                   ...                 ...                 ...   
 2020-01-01            5.0                 5.2                 3.2   
 2020-04-01           26.6                 5.0                 5.2   
 2020-07-01           12.7                26.6                 5.0   
 2020-10-01           12.5                12.7                26.6   
 2021-01-01           15.8                12.5                12.7   
 
             savings_ratio_lag3  savings_ratio_lag4  
 period                                              
 1998-01-01                12.7                 9.6  
 1998-04-01                 7.3                12.7  
 1998-07-01                 8.1                 7.3  
 1998-10-01                 6.0                 8.1  
 1999-01-01                10.1                 6.0  
 ...                        ...                 ...  
 2020-01-01                 7.9                 3.2  
 2020-04-01                 3.2                 7.9  
 2020-07-01                 5.2                 3.2  
 2020-10-01                 5.0                 5.2  
 2021-01-01                26.6                 5.0  
 
 [93 rows x 5 columns],
             inactivity  inactivity_lag1  inactivity_lag2  inactivity_lag3  \
 period                                                                      
 1998-01-01        23.8             23.8             23.6             23.4   
 1998-04-01        23.9             23.8             23.8             23.6   
 1998-07-01        23.6             23.9             23.8             23.8   
 1998-10-01        23.5             23.6             23.9             23.8   
 1999-01-01        23.4             23.5             23.6             23.9   
 ...                ...              ...              ...              ...   
 2020-01-01        20.4             20.5             20.8             20.7   
 2020-04-01        20.9             20.4             20.5             20.8   
 2020-07-01        21.0             20.9             20.4             20.5   
 2020-10-01        21.1             21.0             20.9             20.4   
 2021-01-01        21.4             21.1             21.0             20.9   
 
             inactivity_lag4  
 period                       
 1998-01-01             23.6  
 1998-04-01             23.4  
 1998-07-01             23.6  
 1998-10-01             23.8  
 1999-01-01             23.8  
 ...                     ...  
 2020-01-01             20.8  
 2020-04-01             20.7  
 2020-07-01             20.8  
 2020-10-01             20.5  
 2021-01-01             20.4  
 
 [93 rows x 5 columns],
             unemployment  unemployment_lag1  unemployment_lag2  \
 period                                                           
 1998-01-01           6.4                6.4                7.1   
 1998-04-01           6.2                6.4                6.4   
 1998-07-01           6.5                6.2                6.4   
 1998-10-01           6.0                6.5                6.2   
 1999-01-01           6.2                6.0                6.5   
 ...                  ...                ...                ...   
 2020-01-01           4.0                3.7                4.0   
 2020-04-01           4.0                4.0                3.7   
 2020-07-01           5.1                4.0                4.0   
 2020-10-01           5.2                5.1                4.0   
 2021-01-01           4.8                5.2                5.1   
 
             unemployment_lag3  unemployment_lag4  
 period                                            
 1998-01-01                7.1                7.4  
 1998-04-01                7.1                7.1  
 1998-07-01                6.4                7.1  
 1998-10-01                6.4                6.4  
 1999-01-01                6.2                6.4  
 ...                       ...                ...  
 2020-01-01                3.8                3.8  
 2020-04-01                4.0                3.8  
 2020-07-01                3.7                4.0  
 2020-10-01                4.0                3.7  
 2021-01-01                4.0                4.0  
 
 [93 rows x 5 columns],
                twhwgr  twhwgr_lag1  twhwgr_lag2  twhwgr_lag3  twhwgr_lag4
 period                                                                   
 1998-01-01   0.488747    -0.045444     0.216327     0.526497     0.877497
 1998-04-01   0.000000     0.488747    -0.045444     0.216327     0.526497
 1998-07-01   0.395883     0.000000     0.488747    -0.045444     0.216327
 1998-10-01  -0.495719     0.395883     0.000000     0.488747    -0.045444
 1999-01-01   0.577446    -0.495719     0.395883     0.000000     0.488747
 ...               ...          ...          ...          ...          ...
 2020-01-01  -1.742691    -0.237507     0.000000    -0.028493     1.046065
 2020-04-01 -18.075208    -1.742691    -0.237507     0.000000    -0.028493
 2020-07-01   8.588667   -18.075208    -1.742691    -0.237507     0.000000
 2020-10-01   5.588844     8.588667   -18.075208    -1.742691    -0.237507
 2021-01-01  -1.939744     5.588844     8.588667   -18.075208    -1.742691
 
 [93 rows x 5 columns],
             productivity  productivity_lag1  productivity_lag2  \
 period                                                           
 1998-01-01           2.2                1.9                0.8   
 1998-04-01           2.5                2.2                1.9   
 1998-07-01           2.2                2.5                2.2   
 1998-10-01           2.4                2.2                2.5   
 1999-01-01           2.2                2.4                2.2   
 ...                  ...                ...                ...   
 2020-01-01          -0.1                0.3                0.7   
 2020-04-01          -2.1               -0.1                0.3   
 2020-07-01           5.7               -2.1               -0.1   
 2020-10-01           1.4                5.7               -2.1   
 2021-01-01           3.0                1.4                5.7   
 
             productivity_lag3  productivity_lag4  
 period                                            
 1998-01-01                1.1                1.0  
 1998-04-01                0.8                1.1  
 1998-07-01                1.9                0.8  
 1998-10-01                2.2                1.9  
 1999-01-01                2.5                2.2  
 ...                       ...                ...  
 2020-01-01                0.2                0.5  
 2020-04-01                0.7                0.2  
 2020-07-01                0.3                0.7  
 2020-10-01               -0.1                0.3  
 2021-01-01               -2.1               -0.1  
 
 [93 rows x 5 columns],
             BoE_interest  BoE_interest_lag1  BoE_interest_lag2  \
 period                                                           
 1998-01-01           0.0                0.0                0.0   
 1998-04-01           0.0                0.0                0.0   
 1998-07-01           0.0                0.0                0.0   
 1998-10-01           0.0                0.0                0.0   
 1999-01-01           0.0                0.0                0.0   
 ...                  ...                ...                ...   
 2020-01-01       -2870.0            -2670.0            -2711.0   
 2020-04-01       -3617.0            -2870.0            -2670.0   
 2020-07-01       -3931.0            -3617.0            -2870.0   
 2020-10-01       -4052.0            -3931.0            -3617.0   
 2021-01-01       -4128.0            -4052.0            -3931.0   
 
             BoE_interest_lag3  BoE_interest_lag4  
 period                                            
 1998-01-01                0.0                0.0  
 1998-04-01                0.0                0.0  
 1998-07-01                0.0                0.0  
 1998-10-01                0.0                0.0  
 1999-01-01                0.0                0.0  
 ...                       ...                ...  
 2020-01-01            -2718.0            -2729.0  
 2020-04-01            -2711.0            -2718.0  
 2020-07-01            -2670.0            -2711.0  
 2020-10-01            -2870.0            -2670.0  
 2021-01-01            -3617.0            -2870.0  
 
 [93 rows x 5 columns],
                  eir  eir_lag1  eir_lag2  eir_lag3   cb_lag4
 period                                                      
 1998-01-01  2.068674  2.152766  2.001686  2.080403  0.279814
 1998-04-01  2.163189  2.068674  2.152766  2.001686 -0.436642
 1998-07-01  1.952314  2.163189  2.068674  2.152766 -0.042568
 1998-10-01  2.177897  1.952314  2.163189  2.068674 -0.797533
 1999-01-01  1.885925  2.177897  1.952314  2.163189 -1.497500
 ...              ...       ...       ...       ...       ...
 2020-01-01  0.360707  0.482594  0.444257  0.805141 -5.800442
 2020-04-01  0.423791  0.360707  0.482594  0.444257 -2.908939
 2020-07-01  0.341278  0.423791  0.360707  0.482594 -2.541884
 2020-10-01  0.224913  0.341278  0.423791  0.360707  0.488440
 2021-01-01  0.222175  0.224913  0.341278  0.423791 -2.596812
 
 [93 rows x 5 columns],
                   inv   inv_lag1   inv_lag2   inv_lag3   inv_lag4
 period                                                           
 1998-01-01  16.862334  16.894327  15.656332  15.416923  15.101417
 1998-04-01  16.177160  16.862334  16.894327  15.656332  15.416923
 1998-07-01  15.776300  16.177160  16.862334  16.894327  15.656332
 1998-10-01  16.619939  15.776300  16.177160  16.862334  16.894327
 1999-01-01  16.215096  16.619939  15.776300  16.177160  16.862334
 ...               ...        ...        ...        ...        ...
 2020-01-01   9.504062   9.900405  10.225056   9.790043  10.143688
 2020-04-01   9.028604   9.504062   9.900405  10.225056   9.790043
 2020-07-01   9.087124   9.028604   9.504062   9.900405  10.225056
 2020-10-01   9.535715   9.087124   9.028604   9.504062   9.900405
 2021-01-01   8.412439   9.535715   9.087124   9.028604   9.504062
 
 [93 rows x 5 columns],
             total_gfcf  total_gfcf_lag1  total_gfcf_lag2  total_gfcf_lag3  \
 period                                                                      
 1998-01-01   28.478299        27.770416        25.982576        25.225364   
 1998-04-01   26.033996        28.478299        27.770416        25.982576   
 1998-07-01   26.000814        26.033996        28.478299        27.770416   
 1998-10-01   27.056290        26.000814        26.033996        28.478299   
 1999-01-01   27.476666        27.056290        26.000814        26.033996   
 ...                ...              ...              ...              ...   
 2020-01-01   17.455188        17.274515        17.864555        16.974797   
 2020-04-01   15.274615        17.455188        17.274515        17.864555   
 2020-07-01   16.903118        15.274615        17.455188        17.274515   
 2020-10-01   17.408148        16.903118        15.274615        17.455188   
 2021-01-01   17.347942        17.408148        16.903118        15.274615   
 
             total_gfcf_lag4  
 period                       
 1998-01-01        26.725449  
 1998-04-01        25.225364  
 1998-07-01        25.982576  
 1998-10-01        27.770416  
 1999-01-01        28.478299  
 ...                     ...  
 2020-01-01        18.764227  
 2020-04-01        16.974797  
 2020-07-01        17.864555  
 2020-10-01        17.274515  
 2021-01-01        17.455188  
 
 [93 rows x 5 columns],
             o_gap  o_gap_lag1  o_gap_lag2  o_gap_lag3  o_gap_lag4
 period                                                           
 1998-01-01    2.5         2.3         2.1         1.8         1.4
 1998-04-01    2.5         2.5         2.3         2.1         1.8
 1998-07-01    2.0         2.5         2.5         2.3         2.1
 1998-10-01    1.0         2.0         2.5         2.5         2.3
 1999-01-01    0.6         1.0         2.0         2.5         2.5
 ...           ...         ...         ...         ...         ...
 2020-01-01    0.0         0.0         0.1         0.1         0.3
 2020-04-01    0.0         0.0         0.0         0.1         0.1
 2020-07-01   -0.8         0.0         0.0         0.0         0.1
 2020-10-01   -0.8        -0.8         0.0         0.0         0.0
 2021-01-01    0.4        -0.8        -0.8         0.0         0.0
 
 [93 rows x 5 columns],
             rgdpgr_QoQ  rgdpgr_QoQ_lag1  rgdpgr_QoQ_lag2  rgdpgr_QoQ_lag3  \
 period                                                                      
 1998-01-01         0.7              1.2              0.7              0.8   
 1998-04-01         0.7              0.7              1.2              0.7   
 1998-07-01         0.5              0.7              0.7              1.2   
 1998-10-01         0.7              0.5              0.7              0.7   
 1999-01-01         0.6              0.7              0.5              0.7   
 ...                ...              ...              ...              ...   
 2020-01-01        -2.6              0.0              0.5              0.1   
 2020-04-01       -19.4             -2.6              0.0              0.5   
 2020-07-01        17.6            -19.4             -2.6              0.0   
 2020-10-01         1.5             17.6            -19.4             -2.6   
 2021-01-01        -1.3              1.5             17.6            -19.4   
 
             rgdpgr_QoQ_lag4  
 period                       
 1998-01-01              1.8  
 1998-04-01              0.8  
 1998-07-01              0.7  
 1998-10-01              1.2  
 1999-01-01              0.7  
 ...                     ...  
 2020-01-01              0.6  
 2020-04-01              0.1  
 2020-07-01              0.5  
 2020-10-01              0.0  
 2021-01-01             -2.6  
 
 [93 rows x 5 columns])
Specifying the lagged model
y = X

#Remove first few observations to match length of X, X1... 
y = y[4:]
y
y = X

cgncr	cgncr_lag1	cgncr_lag2	cgncr_lag3	cgncr_lag4
period					
1998-01-01	-2.442600	-0.466053	0.694312	3.823072	2.806258
1998-04-01	2.654218	-2.442600	-0.466053	0.694312	3.823072
1998-07-01	-0.582444	2.654218	-2.442600	-0.466053	0.694312
1998-10-01	-1.526534	-0.582444	2.654218	-2.442600	-0.466053
1999-01-01	-2.191795	-1.526534	-0.582444	2.654218	-2.442600
...	...	...	...	...	...
2020-01-01	-0.379591	4.334060	1.818269	4.147895	-1.015848
2020-04-01	35.780901	-0.379591	4.334060	1.818269	4.147895
2020-07-01	13.367780	35.780901	-0.379591	4.334060	1.818269
2020-10-01	12.743945	13.367780	35.780901	-0.379591	4.334060
2021-01-01	3.703245	12.743945	13.367780	35.780901	-0.379591
93 rows × 5 columns


