Big Data Group Project
Benchmark model
Step One: Download the data
Let's import relevant packages:

import numpy as np
import pandas as pd
Import the data:

df = pd.read_excel('C:/Users/ELyons/Group Project/Input.xlsx')
df = df.set_index('date')
df
cgncr	og	rgdpgr	infl	inv	cons	cb	save	eir	u	inact	twhwgr	prodgr
date													
1972-04-01	2.486782	-0.1	6.993290	-1.008889	22.824615	60.879670	1.092325	10.9	5.857047	4.4	24.8	0.506504	3.7
1972-07-01	3.836564	1.2	0.043480	2.482894	21.346813	62.512751	-0.901054	6.4	5.231162	4.3	24.8	0.412324	1.8
1972-10-01	6.604795	3.1	4.362183	5.317455	21.874646	61.490075	0.108275	5.7	5.863047	4.2	24.6	0.593133	2.3
1973-01-01	-2.439896	6.0	0.803017	0.205900	21.670534	58.664693	-2.220407	9.2	5.730127	3.9	24.3	0.986506	7.3
1973-04-01	6.177329	8.3	-0.766982	0.423129	23.725180	61.609384	-0.471239	11.4	5.954723	3.7	24.2	0.404222	5.2
...	...	...	...	...	...	...	...	...	...	...	...	...	...
2020-07-01	13.342683	-0.8	18.960858	-7.121388	15.474804	62.894384	-1.961090	12.4	1.347726	4.8	21.0	8.588667	5.7
2020-10-01	12.736964	-0.8	4.907953	-0.570066	17.195295	61.851000	-5.221878	12.0	0.721711	5.2	21.1	5.588844	1.4
2021-01-01	3.705312	0.4	-4.052871	3.279455	17.768897	57.195700	-1.560736	15.5	1.180677	4.9	21.4	-1.939744	3.0
2021-04-01	12.941423	1.2	4.359814	-2.428987	17.844727	61.846932	-2.080583	13.4	2.379833	4.7	21.1	5.355640	4.9
2021-07-01	4.238560	0.0	1.465925	0.919680	16.695427	63.614550	-4.192257	7.4	2.377453	4.3	21.1	2.526715	-4.5
198 rows × 13 columns

Step Two: Let's look at the data
import seaborn as sns
sns.set_theme(style="darkgrid")
from pylab import rcParams
rcParams['figure.figsize'] = 20, 5
​
CGNCR = sns.lineplot(data=df, x = 'date', y="cgncr", color='r').set_title('CGNRC over time, £m - Quarterly')
CGNCR
Text(0.5, 1.0, 'CGNRC over time, £m - Quarterly')

Step three: Let's set a benchmark model
# Define the predictors
X = pd.DataFrame(df['cgncr'])
X['cgncr1'] = df['cgncr'].shift(1)
X['cgncr2'] = df['cgncr'].shift(2)
X['cgncr3'] = df['cgncr'].shift(3)
X['cgncr4'] = df['cgncr'].shift(4)
X = X[['cgncr1','cgncr2','cgncr3','cgncr4']]
X
​
X =X[4:] # remove NaNs
X
​
​
cgncr1	cgncr2	cgncr3	cgncr4
date				
1973-04-01	-2.439896	6.604795	3.836564	2.486782
1973-07-01	6.177329	-2.439896	6.604795	3.836564
1973-10-01	3.231284	6.177329	-2.439896	6.604795
1974-01-01	3.997814	3.231284	6.177329	-2.439896
1974-04-01	-2.979507	3.997814	3.231284	6.177329
...	...	...	...	...
2020-07-01	35.624682	-0.379606	4.334060	1.818269
2020-10-01	13.342683	35.624682	-0.379606	4.334060
2021-01-01	12.736964	13.342683	35.624682	-0.379606
2021-04-01	3.705312	12.736964	13.342683	35.624682
2021-07-01	12.941423	3.705312	12.736964	13.342683
194 rows × 4 columns

#Define the target variable
y = df[['cgncr']]
y = y[4:] # make x and y same length
y
cgncr
date	
1973-04-01	6.177329
1973-07-01	3.231284
1973-10-01	3.997814
1974-01-01	-2.979507
1974-04-01	4.902801
...	...
2020-07-01	13.342683
2020-10-01	12.736964
2021-01-01	3.705312
2021-04-01	12.941423
2021-07-01	4.238560
194 rows × 1 columns

Step four: Lets train the model
from sklearn.model_selection import train_test_split 
import statsmodels.api as sm
​
# Note issue with Train Test Split in that it randomises observations in the train and test sections. 
# We need to keep the dates unbroken across train and test
# Test on the last 10 years of the data (Post 2008FC, 2008 Q3 onwards)\n",
​
test_size = 48
​
X_train = X[:-test_size]
X_test = X[-test_size:] 
y_train = y[:-test_size]
y_test = y[-test_size:]
print(X_train)
print(X_test)
print(y_train)
print(y_test)
​
               cgncr1     cgncr2     cgncr3    cgncr4
date                                                 
1973-04-01  -2.439896   6.604795   3.836564  2.486782
1973-07-01   6.177329  -2.439896   6.604795  3.836564
1973-10-01   3.231284   6.177329  -2.439896  6.604795
1974-01-01   3.997814   3.231284   6.177329 -2.439896
1974-04-01  -2.979507   3.997814   3.231284  6.177329
...               ...        ...        ...       ...
2008-07-01   7.770711  -2.112913   5.216170  0.904073
2008-10-01   9.458093   7.770711  -2.112913  5.216170
2009-01-01  16.839697   9.458093   7.770711 -2.112913
2009-04-01   7.262339  16.839697   9.458093  7.770711
2009-07-01  14.096838   7.262339  16.839697  9.458093

[146 rows x 4 columns]
               cgncr1     cgncr2     cgncr3     cgncr4
date                                                  
2009-10-01   9.544601  14.096838   7.262339  16.839697
2010-01-01  19.673059   9.544601  14.096838   7.262339
2010-04-01   7.521456  19.673059   9.544601  14.096838
2010-07-01  12.614575   7.521456  19.673059   9.544601
2010-10-01   6.656649  12.614575   7.521456  19.673059
2011-01-01  10.604904   6.656649  12.614575   7.521456
2011-04-01   3.200649  10.604904   6.656649  12.614575
2011-07-01   9.774241   3.200649  10.604904   6.656649
2011-10-01   6.415939   9.774241   3.200649  10.604904
2012-01-01   7.204729   6.415939   9.774241   3.200649
2012-04-01   4.755265   7.204729   6.415939   9.774241
2012-07-01   6.350192   4.755265   7.204729   6.415939
2012-10-01   6.073718   6.350192   4.755265   7.204729
2013-01-01   8.689587   6.073718   6.350192   4.755265
2013-04-01   1.070862   8.689587   6.073718   6.350192
2013-07-01   6.501962   1.070862   8.689587   6.073718
2013-10-01   3.208359   6.501962   1.070862   8.689587
2014-01-01   5.445691   3.208359   6.501962   1.070862
2014-04-01   2.188452   5.445691   3.208359   6.501962
2014-07-01   7.479211   2.188452   5.445691   3.208359
2014-10-01   4.348478   7.479211   2.188452   5.445691
2015-01-01   5.129593   4.348478   7.479211   2.188452
2015-04-01   1.043827   5.129593   4.348478   7.479211
2015-07-01   5.894343   1.043827   5.129593   4.348478
2015-10-01   3.733689   5.894343   1.043827   5.129593
2016-01-01   3.607893   3.733689   5.894343   1.043827
2016-04-01  -0.677409   3.607893   3.733689   5.894343
2016-07-01   5.439613  -0.677409   3.607893   3.733689
2016-10-01   5.714828   5.439613  -0.677409   3.607893
2017-01-01   4.776309   5.714828   5.439613  -0.677409
2017-04-01  -2.609338   4.776309   5.714828   5.439613
2017-07-01   2.312982  -2.609338   4.776309   5.714828
2017-10-01   2.484521   2.312982  -2.609338   4.776309
2018-01-01   4.432332   2.484521   2.312982  -2.609338
2018-04-01  -1.892157   4.432332   2.484521   2.312982
2018-07-01   2.622173  -1.892157   4.432332   2.484521
2018-10-01   0.984926   2.622173  -1.892157   4.432332
2019-01-01   3.771878   0.984926   2.622173  -1.892157
2019-04-01  -1.015848   3.771878   0.984926   2.622173
2019-07-01   4.147895  -1.015848   3.771878   0.984926
2019-10-01   1.818269   4.147895  -1.015848   3.771878
2020-01-01   4.334060   1.818269   4.147895  -1.015848
2020-04-01  -0.379606   4.334060   1.818269   4.147895
2020-07-01  35.624682  -0.379606   4.334060   1.818269
2020-10-01  13.342683  35.624682  -0.379606   4.334060
2021-01-01  12.736964  13.342683  35.624682  -0.379606
2021-04-01   3.705312  12.736964  13.342683  35.624682
2021-07-01  12.941423   3.705312  12.736964  13.342683
                cgncr
date                 
1973-04-01   6.177329
1973-07-01   3.231284
1973-10-01   3.997814
1974-01-01  -2.979507
1974-04-01   4.902801
...               ...
2008-07-01   9.458093
2008-10-01  16.839697
2009-01-01   7.262339
2009-04-01  14.096838
2009-07-01   9.544601

[146 rows x 1 columns]
                cgncr
date                 
2009-10-01  19.673059
2010-01-01   7.521456
2010-04-01  12.614575
2010-07-01   6.656649
2010-10-01  10.604904
2011-01-01   3.200649
2011-04-01   9.774241
2011-07-01   6.415939
2011-10-01   7.204729
2012-01-01   4.755265
2012-04-01   6.350192
2012-07-01   6.073718
2012-10-01   8.689587
2013-01-01   1.070862
2013-04-01   6.501962
2013-07-01   3.208359
2013-10-01   5.445691
2014-01-01   2.188452
2014-04-01   7.479211
2014-07-01   4.348478
2014-10-01   5.129593
2015-01-01   1.043827
2015-04-01   5.894343
2015-07-01   3.733689
2015-10-01   3.607893
2016-01-01  -0.677409
2016-04-01   5.439613
2016-07-01   5.714828
2016-10-01   4.776309
2017-01-01  -2.609338
2017-04-01   2.312982
2017-07-01   2.484521
2017-10-01   4.432332
2018-01-01  -1.892157
2018-04-01   2.622173
2018-07-01   0.984926
2018-10-01   3.771878
2019-01-01  -1.015848
2019-04-01   4.147895
2019-07-01   1.818269
2019-10-01   4.334060
2020-01-01  -0.379606
2020-04-01  35.624682
2020-07-01  13.342683
2020-10-01  12.736964
2021-01-01   3.705312
2021-04-01  12.941423
2021-07-01   4.238560
X = sm.add_constant(X)
​
model = sm.OLS(y_train, X_train)
results = model.fit()
​
results.summary()
OLS Regression Results
Dep. Variable:	cgncr	R-squared (uncentered):	0.725
Model:	OLS	Adj. R-squared (uncentered):	0.717
Method:	Least Squares	F-statistic:	93.36
Date:	Thu, 27 Jan 2022	Prob (F-statistic):	9.26e-39
Time:	11:09:24	Log-Likelihood:	-337.20
No. Observations:	146	AIC:	682.4
Df Residuals:	142	BIC:	694.3
Df Model:	4		
Covariance Type:	nonrobust		
coef	std err	t	P>|t|	[0.025	0.975]
cgncr1	0.2734	0.065	4.186	0.000	0.144	0.402
cgncr2	0.2646	0.067	3.951	0.000	0.132	0.397
cgncr3	-0.1506	0.069	-2.192	0.030	-0.286	-0.015
cgncr4	0.6351	0.068	9.288	0.000	0.500	0.770
Omnibus:	6.063	Durbin-Watson:	1.356
Prob(Omnibus):	0.048	Jarque-Bera (JB):	8.053
Skew:	0.206	Prob(JB):	0.0178
Kurtosis:	4.074	Cond. No.	3.18


Notes:
[1] R² is computed without centering (uncentered) since the model does not contain a constant.
[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.
The R squared shows us what proportion/fraction of variance in y is shared with variance in x. In this case, this model explains 72.5% of the variation in data. The predictors used in this regression are simply the lagged CGNCR of the previous quarter.

Our std error is an estimate of the standard deviation of the coefficient, a measurement of the amount of variation in the coefficient throughout its data points. This is relatively small across the period.

CGNCR1, CGNCR2 and CGNCR4 predictor is significant at the 99%.

Main model: Incorporating all predictors from df
list(df)
['cgncr',
 'og',
 'rgdpgr',
 'infl',
 'inv',
 'cons',
 'cb',
 'save',
 'eir',
 'u',
 'inact',
 'twhwgr',
 'prodgr']
Let's lag all predictors:

df['cgncr1'] = df['cgncr'].shift(1)
df['cgncr2'] = df['cgncr'].shift(2)
df['cgncr3'] = df['cgncr'].shift(3)
df['cgncr4'] = df['cgncr'].shift(4)
    
# Output gap. 4 lags
df['og1'] = df['og'].shift(1)
df['og2'] = df['og'].shift(2)
df['og3'] = df['og'].shift(3)
df['og4'] = df['og'].shift(4)
​
# Real GDP growth. 4 lags.
df['rgdpgr1'] = df['rgdpgr'].shift(1)
df['rgdpgr2'] = df['rgdpgr'].shift(2)
df['rgdpgr3'] = df['rgdpgr'].shift(3)
df['rgdpgr4'] = df['rgdpgr'].shift(4)
​
# GDP deflator growth. 6 lags
df['infl1'] = df['infl'].shift(1)
df['infl2'] = df['infl'].shift(2)
df['infl3'] = df['infl'].shift(3)
df['infl4'] = df['infl'].shift(4)
df['infl5'] = df['infl'].shift(5)
df['infl6'] = df['infl'].shift(6)
   
# Investment. 4 lags
df['inv1'] = df['inv'].shift(1)
df['inv2'] = df['inv'].shift(2)
df['inv3'] = df['inv'].shift(3)
df['inv4'] = df['inv'].shift(4)
​
# Consumption. 4 lags
df['cons1'] = df['cons'].shift(1)
df['cons2'] = df['cons'].shift(2)
df['cons3'] = df['cons'].shift(3)
df['cons4'] = df['cons'].shift(4)
  
# Current Balance. 4 lags
df['cb1'] = df['cb'].shift(1)
df['cb2'] = df['cb'].shift(2)
df['cb3'] = df['cb'].shift(3)
df['cb4'] = df['cb'].shift(4)
    
# Savings Ratio. 4 lags
df['save1'] = df['save'].shift(1)
df['save2'] = df['save'].shift(2)
df['save3'] = df['save'].shift(3)
df['save4'] = df['save'].shift(4)
  
# Effective Interest Rate. 4 lags.\n",
df['eir1'] = df['eir'].shift(1)
df['eir2'] = df['eir'].shift(2)
df['eir3'] = df['eir'].shift(3)
df['eir4'] = df['eir'].shift(4)
    
# Unemployment Rate. 4 lags
df['u1'] = df['u'].shift(1)
df['u2'] = df['u'].shift(2)
df['u3'] = df['u'].shift(3)
df['u4'] = df['u'].shift(4)
    
# Inactivity. 4 lags
df['inact1'] = df['inact'].shift(1)
df['inact2'] = df['inact'].shift(2)
df['inact3'] = df['inact'].shift(3)
df['inact4'] = df['inact'].shift(4)
  
# Growth in total working hours worked. 4 lags
df['twhwgr1'] = df['twhwgr'].shift(1)
df['twhwgr2'] = df['twhwgr'].shift(2)
df['twhwgr3'] = df['twhwgr'].shift(3)
df['twhwgr4'] = df['twhwgr'].shift(4)
​
# Productivity growth. 1 lag.\n",
df['prodgr1'] = df['prodgr'].shift(1)
df.columns
Index(['cgncr', 'og', 'rgdpgr', 'infl', 'inv', 'cons', 'cb', 'save', 'eir',
       'u', 'inact', 'twhwgr', 'prodgr', 'cgncr1', 'cgncr2', 'cgncr3',
       'cgncr4', 'og1', 'og2', 'og3', 'og4', 'rgdpgr1', 'rgdpgr2', 'rgdpgr3',
       'rgdpgr4', 'infl1', 'infl2', 'infl3', 'infl4', 'infl5', 'infl6', 'inv1',
       'inv2', 'inv3', 'inv4', 'cons1', 'cons2', 'cons3', 'cons4', 'cb1',
       'cb2', 'cb3', 'cb4', 'save1', 'save2', 'save3', 'save4', 'eir1', 'eir2',
       'eir3', 'eir4', 'u1', 'u2', 'u3', 'u4', 'inact1', 'inact2', 'inact3',
       'inact4', 'twhwgr1', 'twhwgr2', 'twhwgr3', 'twhwgr4', 'prodgr1'],
      dtype='object')
Step two: create a vector of predictors
X = df[['cgncr1', 'cgncr2', 'cgncr3',
       'cgncr4', 'og1', 'og2', 'og3', 'og4', 'rgdpgr1', 'rgdpgr2', 'rgdpgr3',
       'rgdpgr4', 'infl1', 'infl2', 'infl3', 'infl4', 'infl5', 'infl6', 'inv1',
       'inv2', 'inv3', 'inv4', 'cons1', 'cons2', 'cons3', 'cons4', 'cb1',
       'cb2', 'cb3', 'cb4', 'save1', 'save2', 'save3', 'save4', 'eir1', 'eir2',
       'eir3', 'eir4', 'u1', 'u2', 'u3', 'u4', 'inact1', 'inact2', 'inact3',
       'inact4', 'twhwgr1', 'twhwgr2', 'twhwgr3', 'twhwgr4', 'prodgr1']]
​
list(X)
['cgncr1',
 'cgncr2',
 'cgncr3',
 'cgncr4',
 'og1',
 'og2',
 'og3',
 'og4',
 'rgdpgr1',
 'rgdpgr2',
 'rgdpgr3',
 'rgdpgr4',
 'infl1',
 'infl2',
 'infl3',
 'infl4',
 'infl5',
 'infl6',
 'inv1',
 'inv2',
 'inv3',
 'inv4',
 'cons1',
 'cons2',
 'cons3',
 'cons4',
 'cb1',
 'cb2',
 'cb3',
 'cb4',
 'save1',
 'save2',
 'save3',
 'save4',
 'eir1',
 'eir2',
 'eir3',
 'eir4',
 'u1',
 'u2',
 'u3',
 'u4',
 'inact1',
 'inact2',
 'inact3',
 'inact4',
 'twhwgr1',
 'twhwgr2',
 'twhwgr3',
 'twhwgr4',
 'prodgr1']
# As before, remove NaNs from lagged variables.
​
X = X[6:]
X
cgncr1	cgncr2	cgncr3	cgncr4	og1	og2	og3	og4	rgdpgr1	rgdpgr2	...	u4	inact1	inact2	inact3	inact4	twhwgr1	twhwgr2	twhwgr3	twhwgr4	prodgr1
date																					
1973-10-01	3.231284	6.177329	-2.439896	6.604795	7.1	8.3	6.0	3.1	1.576592	-0.766982	...	4.2	24.4	24.2	24.3	24.6	-0.055916	0.404222	0.986506	0.593133	3.9
1974-01-01	3.997814	3.231284	6.177329	-2.439896	6.1	7.1	8.3	6.0	1.803829	1.576592	...	3.9	24.4	24.4	24.2	24.3	0.022379	-0.055916	0.404222	0.986506	2.3
1974-04-01	-2.979507	3.997814	3.231284	6.177329	4.6	6.1	7.1	8.3	-9.868893	1.803829	...	3.7	24.4	24.4	24.4	24.2	-0.257299	0.022379	-0.055916	0.404222	-3.9
1974-07-01	4.902801	-2.979507	3.997814	3.231284	5.6	4.6	6.1	7.1	5.953953	-9.868893	...	3.6	24.3	24.4	24.4	24.4	-0.224316	-0.257299	0.022379	-0.055916	-2.2
1974-10-01	3.478988	4.902801	-2.979507	3.997814	4.1	5.6	4.6	6.1	2.101023	5.953953	...	3.4	24.1	24.3	24.4	24.4	-0.168615	-0.224316	-0.257299	0.022379	-0.1
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2020-07-01	35.624682	-0.379606	4.334060	1.818269	0.0	0.0	0.0	0.1	-20.232835	-5.424406	...	3.8	20.9	20.4	20.5	20.8	-18.075208	-1.742691	-0.237507	0.000000	-2.1
2020-10-01	13.342683	35.624682	-0.379606	4.334060	-0.8	0.0	0.0	0.0	18.960858	-20.232835	...	3.8	21.0	20.9	20.4	20.5	8.588667	-18.075208	-1.742691	-0.237507	5.7
2021-01-01	12.736964	13.342683	35.624682	-0.379606	-0.8	-0.8	0.0	0.0	4.907953	18.960858	...	4.0	21.1	21.0	20.9	20.4	5.588844	8.588667	-18.075208	-1.742691	1.4
2021-04-01	3.705312	12.736964	13.342683	35.624682	0.4	-0.8	-0.8	0.0	-4.052871	4.907953	...	4.1	21.4	21.1	21.0	20.9	-1.939744	5.588844	8.588667	-18.075208	3.0
2021-07-01	12.941423	3.705312	12.736964	13.342683	1.2	0.4	-0.8	-0.8	4.359814	-4.052871	...	4.8	21.1	21.4	21.1	21.0	5.355640	-1.939744	5.588844	8.588667	4.9
192 rows × 51 columns

Step three: define the predictors and target variable
y = df[['cgncr']]
y = y[6:]
y
​
cgncr
date	
1973-10-01	3.997814
1974-01-01	-2.979507
1974-04-01	4.902801
1974-07-01	3.478988
1974-10-01	8.873561
...	...
2020-07-01	13.342683
2020-10-01	12.736964
2021-01-01	3.705312
2021-04-01	12.941423
2021-07-01	4.238560
192 rows × 1 columns

# Let's remove the effects of the pandemic
​
# Remove pandemic
​
y = y[:185]
X = X[:185]
y
X
cgncr1	cgncr2	cgncr3	cgncr4	og1	og2	og3	og4	rgdpgr1	rgdpgr2	...	u4	inact1	inact2	inact3	inact4	twhwgr1	twhwgr2	twhwgr3	twhwgr4	prodgr1
date																					
1973-10-01	3.231284	6.177329	-2.439896	6.604795	7.1	8.3	6.0	3.1	1.576592	-0.766982	...	4.2	24.4	24.2	24.3	24.6	-0.055916	0.404222	0.986506	0.593133	3.9
1974-01-01	3.997814	3.231284	6.177329	-2.439896	6.1	7.1	8.3	6.0	1.803829	1.576592	...	3.9	24.4	24.4	24.2	24.3	0.022379	-0.055916	0.404222	0.986506	2.3
1974-04-01	-2.979507	3.997814	3.231284	6.177329	4.6	6.1	7.1	8.3	-9.868893	1.803829	...	3.7	24.4	24.4	24.4	24.2	-0.257299	0.022379	-0.055916	0.404222	-3.9
1974-07-01	4.902801	-2.979507	3.997814	3.231284	5.6	4.6	6.1	7.1	5.953953	-9.868893	...	3.6	24.3	24.4	24.4	24.4	-0.224316	-0.257299	0.022379	-0.055916	-2.2
1974-10-01	3.478988	4.902801	-2.979507	3.997814	4.1	5.6	4.6	6.1	2.101023	5.953953	...	3.4	24.1	24.3	24.4	24.4	-0.168615	-0.224316	-0.257299	0.022379	-0.1
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2018-10-01	0.984926	2.622173	-1.892157	4.432332	0.3	0.2	0.1	0.2	1.601688	1.203009	...	4.4	21.1	21.2	21.1	21.3	0.880418	0.164745	0.486902	0.234261	0.0
2019-01-01	3.771878	0.984926	2.622173	-1.892157	0.2	0.3	0.2	0.1	3.096787	1.601688	...	4.2	20.9	21.1	21.2	21.1	-0.067133	0.880418	0.164745	0.486902	0.5
2019-04-01	-1.015848	3.771878	0.984926	2.622173	0.3	0.2	0.3	0.2	-2.839855	3.096787	...	4.0	20.8	20.9	21.1	21.2	1.046065	-0.067133	0.880418	0.164745	0.5
2019-07-01	4.147895	-1.015848	3.771878	0.984926	0.1	0.3	0.2	0.3	-0.169420	-2.839855	...	4.1	20.7	20.8	20.9	21.1	-0.028493	1.046065	-0.067133	0.880418	0.2
2019-10-01	1.818269	4.147895	-1.015848	3.771878	0.1	0.1	0.3	0.2	1.477213	-0.169420	...	4.0	20.8	20.7	20.8	20.9	0.000000	-0.028493	1.046065	-0.067133	0.7
185 rows × 51 columns

# To ensure data is clean:
print(X.isna().sum())
print(y.isna().sum())
cgncr1     0
cgncr2     0
cgncr3     0
cgncr4     0
og1        0
og2        0
og3        0
og4        0
rgdpgr1    0
rgdpgr2    0
rgdpgr3    0
rgdpgr4    0
infl1      0
infl2      0
infl3      0
infl4      0
infl5      0
infl6      0
inv1       0
inv2       0
inv3       0
inv4       0
cons1      0
cons2      0
cons3      0
cons4      0
cb1        0
cb2        0
cb3        0
cb4        0
save1      0
save2      0
save3      0
save4      0
eir1       0
eir2       0
eir3       0
eir4       0
u1         0
u2         0
u3         0
u4         0
inact1     0
inact2     0
inact3     0
inact4     0
twhwgr1    0
twhwgr2    0
twhwgr3    0
twhwgr4    0
prodgr1    0
dtype: int64
cgncr    0
dtype: int64
Step four: test model accuracy with new lags
# As before, test the final ten years of data post 2008GFC (2008-07-01)
test_size = 47
​
X_train = X[:-test_size]
X_test = X[-test_size:] 
y_train = y[:-test_size]
y_test = y[-test_size:]
​
print(y_test)
print(X_test)
print(y_train)
print(X_train)
                cgncr
date                 
2008-04-01   7.770711
2008-07-01   9.458093
2008-10-01  16.839697
2009-01-01   7.262339
2009-04-01  14.096838
2009-07-01   9.544601
2009-10-01  19.673059
2010-01-01   7.521456
2010-04-01  12.614575
2010-07-01   6.656649
2010-10-01  10.604904
2011-01-01   3.200649
2011-04-01   9.774241
2011-07-01   6.415939
2011-10-01   7.204729
2012-01-01   4.755265
2012-04-01   6.350192
2012-07-01   6.073718
2012-10-01   8.689587
2013-01-01   1.070862
2013-04-01   6.501962
2013-07-01   3.208359
2013-10-01   5.445691
2014-01-01   2.188452
2014-04-01   7.479211
2014-07-01   4.348478
2014-10-01   5.129593
2015-01-01   1.043827
2015-04-01   5.894343
2015-07-01   3.733689
2015-10-01   3.607893
2016-01-01  -0.677409
2016-04-01   5.439613
2016-07-01   5.714828
2016-10-01   4.776309
2017-01-01  -2.609338
2017-04-01   2.312982
2017-07-01   2.484521
2017-10-01   4.432332
2018-01-01  -1.892157
2018-04-01   2.622173
2018-07-01   0.984926
2018-10-01   3.771878
2019-01-01  -1.015848
2019-04-01   4.147895
2019-07-01   1.818269
2019-10-01   4.334060
               cgncr1     cgncr2     cgncr3     cgncr4  og1  og2  og3  og4  \
date                                                                         
2008-04-01  -2.112913   5.216170   0.904073   4.653199  1.2  1.4  1.7  1.7   
2008-07-01   7.770711  -2.112913   5.216170   0.904073  0.7  1.2  1.4  1.7   
2008-10-01   9.458093   7.770711  -2.112913   5.216170 -0.1  0.7  1.2  1.4   
2009-01-01  16.839697   9.458093   7.770711  -2.112913 -2.0 -0.1  0.7  1.2   
2009-04-01   7.262339  16.839697   9.458093   7.770711 -3.7 -2.0 -0.1  0.7   
2009-07-01  14.096838   7.262339  16.839697   9.458093 -4.1 -3.7 -2.0 -0.1   
2009-10-01   9.544601  14.096838   7.262339  16.839697 -3.9 -4.1 -3.7 -2.0   
2010-01-01  19.673059   9.544601  14.096838   7.262339 -3.6 -3.9 -4.1 -3.7   
2010-04-01   7.521456  19.673059   9.544601  14.096838 -2.8 -3.6 -3.9 -4.1   
2010-07-01  12.614575   7.521456  19.673059   9.544601 -2.1 -2.8 -3.6 -3.9   
2010-10-01   6.656649  12.614575   7.521456  19.673059 -1.7 -2.1 -2.8 -3.6   
2011-01-01  10.604904   6.656649  12.614575   7.521456 -1.6 -1.7 -2.1 -2.8   
2011-04-01   3.200649  10.604904   6.656649  12.614575 -1.2 -1.6 -1.7 -2.1   
2011-07-01   9.774241   3.200649  10.604904   6.656649 -1.4 -1.2 -1.6 -1.7   
2011-10-01   6.415939   9.774241   3.200649  10.604904 -1.6 -1.4 -1.2 -1.6   
2012-01-01   7.204729   6.415939   9.774241   3.200649 -1.9 -1.6 -1.4 -1.2   
2012-04-01   4.755265   7.204729   6.415939   9.774241 -1.4 -1.9 -1.6 -1.4   
2012-07-01   6.350192   4.755265   7.204729   6.415939 -1.9 -1.4 -1.9 -1.6   
2012-10-01   6.073718   6.350192   4.755265   7.204729 -1.2 -1.9 -1.4 -1.9   
2013-01-01   8.689587   6.073718   6.350192   4.755265 -1.7 -1.2 -1.9 -1.4   
2013-04-01   1.070862   8.689587   6.073718   6.350192 -1.5 -1.7 -1.2 -1.9   
2013-07-01   6.501962   1.070862   8.689587   6.073718 -1.6 -1.5 -1.7 -1.2   
2013-10-01   3.208359   6.501962   1.070862   8.689587 -1.5 -1.6 -1.5 -1.7   
2014-01-01   5.445691   3.208359   6.501962   1.070862 -1.6 -1.5 -1.6 -1.5   
2014-04-01   2.188452   5.445691   3.208359   6.501962 -1.2 -1.6 -1.5 -1.6   
2014-07-01   7.479211   2.188452   5.445691   3.208359 -0.9 -1.2 -1.6 -1.5   
2014-10-01   4.348478   7.479211   2.188452   5.445691 -0.6 -0.9 -1.2 -1.6   
2015-01-01   5.129593   4.348478   7.479211   2.188452 -0.3 -0.6 -0.9 -1.2   
2015-04-01   1.043827   5.129593   4.348478   7.479211 -0.5 -0.3 -0.6 -0.9   
2015-07-01   5.894343   1.043827   5.129593   4.348478 -0.3 -0.5 -0.3 -0.6   
2015-10-01   3.733689   5.894343   1.043827   5.129593 -0.3 -0.3 -0.5 -0.3   
2016-01-01   3.607893   3.733689   5.894343   1.043827 -0.1 -0.3 -0.3 -0.5   
2016-04-01  -0.677409   3.607893   3.733689   5.894343 -0.6 -0.1 -0.3 -0.3   
2016-07-01   5.439613  -0.677409   3.607893   3.733689 -0.5 -0.6 -0.1 -0.3   
2016-10-01   5.714828   5.439613  -0.677409   3.607893 -0.4 -0.5 -0.6 -0.1   
2017-01-01   4.776309   5.714828   5.439613  -0.677409  0.0 -0.4 -0.5 -0.6   
2017-04-01  -2.609338   4.776309   5.714828   5.439613  0.0  0.0 -0.4 -0.5   
2017-07-01   2.312982  -2.609338   4.776309   5.714828  0.0  0.0  0.0 -0.4   
2017-10-01   2.484521   2.312982  -2.609338   4.776309  0.1  0.0  0.0  0.0   
2018-01-01   4.432332   2.484521   2.312982  -2.609338  0.2  0.1  0.0  0.0   
2018-04-01  -1.892157   4.432332   2.484521   2.312982  0.1  0.2  0.1  0.0   
2018-07-01   2.622173  -1.892157   4.432332   2.484521  0.2  0.1  0.2  0.1   
2018-10-01   0.984926   2.622173  -1.892157   4.432332  0.3  0.2  0.1  0.2   
2019-01-01   3.771878   0.984926   2.622173  -1.892157  0.2  0.3  0.2  0.1   
2019-04-01  -1.015848   3.771878   0.984926   2.622173  0.3  0.2  0.3  0.2   
2019-07-01   4.147895  -1.015848   3.771878   0.984926  0.1  0.3  0.2  0.3   
2019-10-01   1.818269   4.147895  -1.015848   3.771878  0.1  0.1  0.3  0.2   

             rgdpgr1   rgdpgr2  ...   u4  inact1  inact2  inact3  inact4  \
date                            ...                                        
2008-04-01 -0.401344  1.314069  ...  5.4    23.0    23.1    23.2    23.2   
2008-07-01 -2.484286 -0.401344  ...  5.3    22.9    23.0    23.1    23.2   
2008-10-01  0.203798 -2.484286  ...  5.2    23.0    22.9    23.0    23.1   
2009-01-01 -0.982776  0.203798  ...  5.2    22.9    23.0    22.9    23.0   
2009-04-01 -2.890342 -0.982776  ...  5.4    22.8    22.9    23.0    22.9   
2009-07-01 -2.859679 -2.890342  ...  5.9    23.1    22.8    22.9    23.0   
2009-10-01  3.149571 -2.859679  ...  6.4    23.3    23.1    22.8    22.9   
2010-01-01  1.929226  3.149571  ...  7.1    23.4    23.3    23.1    22.8   
2010-04-01 -1.695364  1.929226  ...  7.8    23.6    23.4    23.3    23.1   
2010-07-01 -0.614328 -1.695364  ...  7.8    23.5    23.6    23.4    23.3   
2010-10-01  3.091927 -0.614328  ...  7.8    23.2    23.5    23.6    23.4   
2011-01-01  2.004373  3.091927  ...  8.0    23.5    23.2    23.5    23.6   
2011-04-01 -2.678028  2.004373  ...  7.9    23.4    23.5    23.2    23.5   
2011-07-01 -0.981970 -2.678028  ...  7.8    23.3    23.4    23.5    23.2   
2011-10-01  2.927166 -0.981970  ...  7.9    23.4    23.3    23.4    23.5   
2012-01-01  2.436843  2.927166  ...  7.8    23.2    23.4    23.3    23.4   
2012-04-01 -2.736060  2.436843  ...  7.9    23.1    23.2    23.4    23.3   
2012-07-01 -1.099197 -2.736060  ...  8.3    22.8    23.1    23.2    23.4   
2012-10-01  2.950049 -1.099197  ...  8.4    22.7    22.8    23.1    23.2   
2013-01-01  2.458089  2.950049  ...  8.2    22.4    22.7    22.8    23.1   
2013-04-01 -2.658480  2.458089  ...  8.0    22.6    22.4    22.7    22.8   
2013-07-01  0.495066 -2.658480  ...  7.9    22.5    22.6    22.4    22.7   
2013-10-01  1.147690  0.495066  ...  7.8    22.3    22.5    22.6    22.4   
2014-01-01  2.570902  1.147690  ...  7.8    22.3    22.3    22.5    22.6   
2014-04-01 -1.614777  2.570902  ...  7.7    22.2    22.3    22.3    22.5   
2014-07-01  1.058845 -1.614777  ...  7.6    22.2    22.2    22.3    22.3   
2014-10-01  1.058262  1.058845  ...  7.2    22.2    22.2    22.2    22.3   
2015-01-01  2.669367  1.058262  ...  6.8    22.3    22.2    22.2    22.2   
2015-04-01 -1.988298  2.669367  ...  6.3    22.1    22.3    22.2    22.2   
2015-07-01  0.646893 -1.988298  ...  6.0    22.1    22.1    22.3    22.2   
2015-10-01  1.411420  0.646893  ...  5.7    22.0    22.1    22.1    22.3   
2016-01-01  2.621714  1.411420  ...  5.5    21.8    22.0    22.1    22.1   
2016-04-01 -2.635357  2.621714  ...  5.6    21.8    21.8    22.0    22.1   
2016-07-01  1.622597 -2.635357  ...  5.3    21.6    21.8    21.8    22.0   
2016-10-01  0.216216  1.622597  ...  5.1    21.7    21.6    21.8    21.8   
2017-01-01  3.211839  0.216216  ...  5.1    21.6    21.7    21.6    21.8   
2017-04-01 -2.322865  3.211839  ...  4.9    21.6    21.6    21.7    21.6   
2017-07-01  0.764764 -2.322865  ...  4.8    21.3    21.6    21.6    21.7   
2017-10-01  0.638812  0.764764  ...  4.7    21.6    21.3    21.6    21.6   
2018-01-01  2.818940  0.638812  ...  4.6    21.3    21.6    21.3    21.6   
2018-04-01 -3.363832  2.818940  ...  4.4    21.1    21.3    21.6    21.3   
2018-07-01  1.203009 -3.363832  ...  4.3    21.2    21.1    21.3    21.6   
2018-10-01  1.601688  1.203009  ...  4.4    21.1    21.2    21.1    21.3   
2019-01-01  3.096787  1.601688  ...  4.2    20.9    21.1    21.2    21.1   
2019-04-01 -2.839855  3.096787  ...  4.0    20.8    20.9    21.1    21.2   
2019-07-01 -0.169420 -2.839855  ...  4.1    20.7    20.8    20.9    21.1   
2019-10-01  1.477213 -0.169420  ...  4.0    20.8    20.7    20.8    20.9   

             twhwgr1   twhwgr2   twhwgr3   twhwgr4  prodgr1  
date                                                         
2008-04-01  1.272400  0.000000  0.201870  0.437520      0.3  
2008-07-01 -1.099361  1.272400  0.000000  0.201870      0.8  
2008-10-01  0.063519 -1.099361  1.272400  0.000000     -0.9  
2009-01-01 -0.603047  0.063519 -1.099361  1.272400     -2.7  
2009-04-01 -1.703034 -0.603047  0.063519 -1.099361     -2.0  
2009-07-01 -0.368165 -1.703034 -0.603047  0.063519     -2.9  
2009-10-01 -0.532551 -0.368165 -1.703034 -0.603047     -0.9  
2010-01-01  0.043706 -0.532551 -0.368165 -1.703034      0.6  
2010-04-01 -0.131062  0.043706 -0.532551 -0.368165      1.6  
2010-07-01  0.863955 -0.131062  0.043706 -0.532551      2.1  
2010-10-01  0.498753  0.863955 -0.131062  0.043706      1.8  
2011-01-01  0.431546  0.498753  0.863955 -0.131062      1.2  
2011-04-01  0.042969  0.431546  0.498753  0.863955      0.6  
2011-07-01 -1.063030  0.042969  0.431546  0.498753      1.5  
2011-10-01  0.607771 -1.063030  0.042969  0.431546      1.1  
2012-01-01 -0.107875  0.607771 -1.063030  0.042969      1.9  
2012-04-01  0.961123 -0.107875  0.607771 -1.063030      1.3  
2012-07-01  0.684565  0.961123 -0.107875  0.607771     -0.7  
2012-10-01  1.009243  0.684565  0.961123 -0.107875     -0.4  
2013-01-01  0.305006  1.009243  0.684565  0.961123     -1.4  
2013-04-01  0.083884  0.305006  1.009243  0.684565     -0.9  
2013-07-01  0.272394  0.083884  0.305006  1.009243      0.3  
2013-10-01  1.180650  0.272394  0.083884  0.305006     -0.3  
2014-01-01  0.175547  1.180650  0.272394  0.083884      0.8  
2014-04-01  0.907123  0.175547  1.180650  0.272394      0.8  
2014-07-01  0.970477  0.907123  0.175547  1.180650     -0.2  
2014-10-01  0.323756  0.970477  0.907123  0.175547      0.5  
2015-01-01  0.594998  0.323756  0.970477  0.907123     -0.2  
2015-04-01  0.280702  0.594998  0.323756  0.970477      0.2  
2015-07-01 -0.129961  0.280702  0.594998  0.323756      1.3  
2015-10-01  0.030030 -0.129961  0.280702  0.594998      1.6  
2016-01-01  1.971380  0.030030 -0.129961  0.280702      0.5  
2016-04-01 -0.500491  1.971380  0.030030 -0.129961      1.0  
2016-07-01  0.256436 -0.500491  1.971380  0.030030      0.6  
2016-10-01  0.236104  0.256436 -0.500491  1.971380      0.4  
2017-01-01  0.392580  0.236104  0.256436 -0.500491      2.0  
2017-04-01  0.625672  0.392580  0.236104  0.256436      1.0  
2017-07-01  0.534344  0.625672  0.392580  0.236104      0.5  
2017-10-01 -0.995361  0.534344  0.625672  0.392580      1.6  
2018-01-01  0.234261 -0.995361  0.534344  0.625672      1.4  
2018-04-01  0.486902  0.234261 -0.995361  0.534344      0.8  
2018-07-01  0.164745  0.486902  0.234261 -0.995361      1.5  
2018-10-01  0.880418  0.164745  0.486902  0.234261      0.0  
2019-01-01 -0.067133  0.880418  0.164745  0.486902      0.5  
2019-04-01  1.046065 -0.067133  0.880418  0.164745      0.5  
2019-07-01 -0.028493  1.046065 -0.067133  0.880418      0.2  
2019-10-01  0.000000 -0.028493  1.046065 -0.067133      0.7  

[47 rows x 51 columns]
               cgncr
date                
1973-10-01  3.997814
1974-01-01 -2.979507
1974-04-01  4.902801
1974-07-01  3.478988
1974-10-01  8.873561
...              ...
2007-01-01 -1.934024
2007-04-01  4.653199
2007-07-01  0.904073
2007-10-01  5.216170
2008-01-01 -2.112913

[138 rows x 1 columns]
              cgncr1    cgncr2    cgncr3    cgncr4  og1  og2  og3  og4  \
date                                                                     
1973-10-01  3.231284  6.177329 -2.439896  6.604795  7.1  8.3  6.0  3.1   
1974-01-01  3.997814  3.231284  6.177329 -2.439896  6.1  7.1  8.3  6.0   
1974-04-01 -2.979507  3.997814  3.231284  6.177329  4.6  6.1  7.1  8.3   
1974-07-01  4.902801 -2.979507  3.997814  3.231284  5.6  4.6  6.1  7.1   
1974-10-01  3.478988  4.902801 -2.979507  3.997814  4.1  5.6  4.6  6.1   
...              ...       ...       ...       ...  ...  ...  ...  ...   
2007-01-01  3.789846  1.975552  6.460840 -1.210987  0.5  0.0  0.1  0.2   
2007-04-01 -1.934024  3.789846  1.975552  6.460840  0.9  0.5  0.0  0.1   
2007-07-01  4.653199 -1.934024  3.789846  1.975552  1.7  0.9  0.5  0.0   
2007-10-01  0.904073  4.653199 -1.934024  3.789846  1.7  1.7  0.9  0.5   
2008-01-01  5.216170  0.904073  4.653199 -1.934024  1.4  1.7  1.7  0.9   

             rgdpgr1   rgdpgr2  ...   u4  inact1  inact2  inact3  inact4  \
date                            ...                                        
1973-10-01  1.576592 -0.766982  ...  4.2    24.4    24.2    24.3    24.6   
1974-01-01  1.803829  1.576592  ...  3.9    24.4    24.4    24.2    24.3   
1974-04-01 -9.868893  1.803829  ...  3.7    24.4    24.4    24.4    24.2   
1974-07-01  5.953953 -9.868893  ...  3.6    24.3    24.4    24.4    24.4   
1974-10-01  2.101023  5.953953  ...  3.4    24.1    24.3    24.4    24.4   
...              ...       ...  ...  ...     ...     ...     ...     ...   
2007-01-01  0.557341  3.364711  ...  5.2    23.0    22.9    22.9    23.0   
2007-04-01  0.161283  0.557341  ...  5.5    23.2    23.0    22.9    22.9   
2007-07-01 -1.665919  0.161283  ...  5.5    23.2    23.2    23.0    22.9   
2007-10-01  3.338862 -1.665919  ...  5.5    23.2    23.2    23.2    23.0   
2008-01-01  1.314069  3.338862  ...  5.5    23.1    23.2    23.2    23.2   

             twhwgr1   twhwgr2   twhwgr3   twhwgr4  prodgr1  
date                                                         
1973-10-01 -0.055916  0.404222  0.986506  0.593133      3.9  
1974-01-01  0.022379 -0.055916  0.404222  0.986506      2.3  
1974-04-01 -0.257299  0.022379 -0.055916  0.404222     -3.9  
1974-07-01 -0.224316 -0.257299  0.022379 -0.055916     -2.2  
1974-10-01 -0.168615 -0.224316 -0.257299  0.022379     -0.1  
...              ...       ...       ...       ...      ...  
2007-01-01  0.407813  0.139710 -0.128797  0.258259      1.0  
2007-04-01  0.160325  0.407813  0.139710 -0.128797      1.4  
2007-07-01  0.437520  0.160325  0.407813  0.139710      1.0  
2007-10-01  0.201870  0.437520  0.160325  0.407813      1.1  
2008-01-01  0.000000  0.201870  0.437520  0.160325      1.6  

[138 rows x 51 columns]
X = sm.add_constant(X)
​
main_model = sm.OLS(y_train, X_train)
results = main_model.fit()
​
results.summary()
OLS Regression Results
Dep. Variable:	cgncr	R-squared (uncentered):	0.853
Model:	OLS	Adj. R-squared (uncentered):	0.767
Method:	Least Squares	F-statistic:	9.916
Date:	Thu, 27 Jan 2022	Prob (F-statistic):	2.55e-20
Time:	11:10:51	Log-Likelihood:	-258.20
No. Observations:	138	AIC:	618.4
Df Residuals:	87	BIC:	767.7
Df Model:	51		
Covariance Type:	nonrobust		
coef	std err	t	P>|t|	[0.025	0.975]
cgncr1	0.2864	0.109	2.635	0.010	0.070	0.502
cgncr2	0.1491	0.114	1.308	0.194	-0.077	0.376
cgncr3	-0.1601	0.114	-1.403	0.164	-0.387	0.067
cgncr4	0.3982	0.102	3.886	0.000	0.195	0.602
og1	-0.2261	0.544	-0.416	0.679	-1.307	0.855
og2	0.2597	0.850	0.305	0.761	-1.431	1.950
og3	-1.1241	0.839	-1.340	0.184	-2.791	0.543
og4	0.9797	0.551	1.777	0.079	-0.116	2.075
rgdpgr1	0.1385	0.275	0.504	0.616	-0.408	0.685
rgdpgr2	0.4926	0.306	1.612	0.111	-0.115	1.100
rgdpgr3	0.3235	0.322	1.005	0.318	-0.316	0.963
rgdpgr4	0.5290	0.274	1.932	0.057	-0.015	1.073
infl1	-0.2479	0.231	-1.074	0.286	-0.707	0.211
infl2	0.1220	0.224	0.544	0.588	-0.324	0.568
infl3	-0.2251	0.218	-1.030	0.306	-0.659	0.209
infl4	0.1351	0.195	0.693	0.490	-0.253	0.523
infl5	-0.0719	0.166	-0.433	0.666	-0.402	0.258
infl6	-0.1890	0.155	-1.223	0.225	-0.496	0.118
inv1	0.7105	0.351	2.025	0.046	0.013	1.408
inv2	-0.2625	0.416	-0.631	0.530	-1.089	0.564
inv3	-0.3013	0.405	-0.744	0.459	-1.106	0.503
inv4	0.1741	0.335	0.520	0.605	-0.492	0.840
cons1	-0.4287	0.301	-1.426	0.157	-1.026	0.169
cons2	0.2188	0.311	0.703	0.484	-0.400	0.837
cons3	-0.4950	0.315	-1.574	0.119	-1.120	0.130
cons4	0.3914	0.300	1.306	0.195	-0.204	0.987
cb1	0.2603	0.240	1.084	0.281	-0.217	0.737
cb2	-0.1266	0.243	-0.521	0.604	-0.610	0.357
cb3	-0.1666	0.253	-0.659	0.512	-0.669	0.336
cb4	-0.0769	0.240	-0.320	0.750	-0.554	0.400
save1	-0.1095	0.114	-0.963	0.338	-0.336	0.117
save2	0.0655	0.117	0.558	0.579	-0.168	0.299
save3	-0.1240	0.129	-0.959	0.340	-0.381	0.133
save4	0.1544	0.113	1.369	0.175	-0.070	0.378
eir1	-0.3388	0.475	-0.713	0.478	-1.284	0.606
eir2	-0.0732	0.483	-0.152	0.880	-1.033	0.886
eir3	0.3259	0.471	0.692	0.491	-0.611	1.263
eir4	-0.5308	0.469	-1.131	0.261	-1.463	0.402
u1	-1.0287	1.753	-0.587	0.559	-4.512	2.455
u2	0.3714	2.524	0.147	0.883	-4.645	5.388
u3	1.5460	2.489	0.621	0.536	-3.402	6.493
u4	-0.8119	1.719	-0.472	0.638	-4.228	2.604
inact1	0.0462	1.578	0.029	0.977	-3.091	3.183
inact2	0.7044	2.225	0.317	0.752	-3.719	5.127
inact3	2.0180	2.234	0.903	0.369	-2.423	6.459
inact4	-1.9349	1.645	-1.176	0.243	-5.206	1.336
twhwgr1	-1.3417	0.657	-2.043	0.044	-2.647	-0.036
twhwgr2	-0.4728	0.689	-0.686	0.494	-1.842	0.896
twhwgr3	-0.3331	0.704	-0.473	0.637	-1.733	1.067
twhwgr4	-0.8448	0.566	-1.494	0.139	-1.969	0.279
prodgr1	-0.4906	0.273	-1.798	0.076	-1.033	0.052
Omnibus:	4.235	Durbin-Watson:	1.908
Prob(Omnibus):	0.120	Jarque-Bera (JB):	4.544
Skew:	-0.196	Prob(JB):	0.103
Kurtosis:	3.798	Cond. No.	2.90e+03


Notes:
[1] R² is computed without centering (uncentered) since the model does not contain a constant.
[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.
[3] The condition number is large, 2.9e+03. This might indicate that there are
strong multicollinearity or other numerical problems.
From the training data, our model with lagged variables achieves an R2 of 0.85.

The R squared shows us what proportion/fraction of variance in y is shared with variance in x. In this case, this model explains 85% of the variation in the training data.

However, the adjusted R2 is only 0.77. The ajusted R2 is used to determine how reliable the correlation is and how much it is determined by the addition of independent variables.

As the adj R2 < R2, this would suggest that our training data incl. variables that do not improve the predictive capacity of the model.

## Test model
from sklearn.linear_model import LinearRegression 
​
# Define and estimate the model
test_data = LinearRegression().fit(X_train, y_train)
​
ypred_test_data= test_data.predict(X_test)
# To calculate the model performance, we have to look at Rsquared
​
from sklearn.metrics import r2_score
​
r2_test_data = round(r2_score(y_test, ypred_test_data),3)
​
accuracy = {'ols':{'r2':r2_test_data}} 
accuracy
{'ols': {'r2': 0.666}}
The r2 for our test data suggests that our model explains 66.6% of the variation in the training data.

As this is lower than our training data, this may imply overfitting.
